circuit MultPE :
  module MulFullRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      node io_out_rawIn_exp = bits(mulRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(mulRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(mulRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 57:12]

