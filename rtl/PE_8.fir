circuit PE_8 :
  module MuxPE :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_1 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_1 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_1 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_1 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_1 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_1 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_1 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_1 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_1 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_1 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_2 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_2 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_2 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_2 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_1 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_3 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_3 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_3 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_1 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_1 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_3 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_1 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_1 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_2 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_3 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_4 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_5 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_6 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_7 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_8 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_9 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_1 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_1 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_2 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_2 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_2 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_4 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_4 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_4 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_2 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_2 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_4 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_2 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_3 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_3 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_3 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_5 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_5 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_5 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_3 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_3 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_5 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_3 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_2 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_6 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_6 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_6 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_2 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_2 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_6 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_2 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_3 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_7 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_7 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_7 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_3 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_3 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_7 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_3 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_10 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_11 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_12 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_13 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_14 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_15 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_16 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_17 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_18 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_19 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_2 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_3 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_2 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_3 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_27 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_28 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_29 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_4 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_4 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_4 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_8 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_8 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_8 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_4 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_4 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_8 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_4 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_5 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_5 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_5 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_9 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_9 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_9 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_5 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_5 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_9 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_5 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_4 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_10 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_10 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_10 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_4 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_4 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_10 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_4 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_5 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_11 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_11 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_11 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_5 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_5 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_11 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_5 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_20 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_21 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_22 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_23 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_24 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_25 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_26 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_27 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_28 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_29 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_4 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_5 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_4 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_5 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_30 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_31 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_32 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_33 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_34 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_35 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_36 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_37 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_38 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_39 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_6 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_6 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_6 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_12 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_12 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_12 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_6 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_6 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_12 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_6 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_7 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_7 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_7 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_13 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_13 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_13 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_7 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_7 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_13 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_7 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_6 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_14 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_14 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_14 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_6 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_6 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_14 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_6 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_7 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_15 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_15 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_15 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_7 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_7 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_15 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_7 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_30 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_31 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_32 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_33 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_34 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_35 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_36 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_37 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_38 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_39 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_6 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_7 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_6 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_7 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_40 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_41 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_42 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_43 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_44 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_45 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_46 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_47 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_48 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_49 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_8 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_8 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_8 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_16 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_16 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_16 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_8 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_8 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_16 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_8 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_9 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_9 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_9 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_17 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_17 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_17 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_9 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_9 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_17 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_9 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_8 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_18 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_18 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_18 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_8 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_8 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_18 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_8 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_9 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_19 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_19 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_19 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_9 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_9 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_19 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_9 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_40 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_41 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_42 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_43 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_44 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_45 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_46 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_47 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_48 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_49 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_8 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_9 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_8 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_9 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_50 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_51 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_52 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_53 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_54 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_55 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_56 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_57 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_58 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_59 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_10 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_10 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_10 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_20 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_20 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_20 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_10 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_10 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_20 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_10 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_11 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_11 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_11 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_21 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_21 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_21 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_11 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_11 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_21 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_11 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_10 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_22 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_22 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_22 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_10 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_10 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_22 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_10 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_11 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_23 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_23 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_23 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_11 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_11 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_23 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_11 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_50 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_51 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_52 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_53 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_54 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_55 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_56 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_57 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_58 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_59 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_10 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_11 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_10 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_11 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_60 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_61 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_62 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_63 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_64 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_65 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_66 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_67 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_68 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_69 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_12 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_12 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_12 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_24 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_24 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_24 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_12 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_12 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_24 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_12 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_13 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_13 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_13 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_25 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_25 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_25 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_13 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_13 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_25 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_13 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_12 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_26 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_26 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_26 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_12 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_12 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_26 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_12 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_13 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_27 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_27 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_27 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_13 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_13 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_27 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_13 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_60 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_61 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_62 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_63 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_64 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_65 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_66 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_67 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_68 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_69 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_12 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_13 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_12 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_13 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module MuxPE_70 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_71 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_72 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_73 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_74 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_75 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_76 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_77 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_78 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MuxPE_79 :
    input clock : Clock
    input reset : Reset
    output io : { flip in_0 : UInt<32>, flip in_1 : UInt<32>, flip in_2 : UInt<32>, flip in_3 : UInt<32>, flip sel : UInt<2>, out : UInt<32>}

    reg sel : UInt, clock with :
      reset => (UInt<1>("h0"), sel) @[MuxPE.scala 20:21]
    sel <= io.sel @[MuxPE.scala 20:21]
    reg in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), in_0) @[MuxPE.scala 21:21]
    in_0 <= io.in_0 @[MuxPE.scala 21:21]
    reg in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), in_1) @[MuxPE.scala 22:21]
    in_1 <= io.in_1 @[MuxPE.scala 22:21]
    reg in_2 : UInt, clock with :
      reset => (UInt<1>("h0"), in_2) @[MuxPE.scala 23:21]
    in_2 <= io.in_2 @[MuxPE.scala 23:21]
    reg in_3 : UInt, clock with :
      reset => (UInt<1>("h0"), in_3) @[MuxPE.scala 24:21]
    in_3 <= io.in_3 @[MuxPE.scala 24:21]
    reg out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[MuxPE.scala 25:21]
    node _T = eq(io.sel, UInt<2>("h0")) @[MuxPE.scala 27:17]
    when _T : @[MuxPE.scala 28:3]
      out <= in_0 @[MuxPE.scala 29:9]
    else :
      node _T_1 = eq(io.sel, UInt<2>("h1")) @[MuxPE.scala 31:23]
      when _T_1 : @[MuxPE.scala 32:3]
        out <= in_1 @[MuxPE.scala 33:9]
      else :
        node _T_2 = eq(io.sel, UInt<2>("h2")) @[MuxPE.scala 35:23]
        when _T_2 : @[MuxPE.scala 36:3]
          out <= in_2 @[MuxPE.scala 37:9]
        else :
          out <= in_3 @[MuxPE.scala 41:9]
    io.out <= out @[MuxPE.scala 44:10]

  module MulFullRawFN_14 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_14 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_14 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_28 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_28 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_28 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_14 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_14 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_28 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_14 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module MulFullRawFN_15 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<48>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 47, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_15 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    inst mulFullRaw of MulFullRawFN_15 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut.sig <= mulFullRaw.io.rawOut.sig @[MulRecFN.scala 90:15]
    io.rawOut.sExp <= mulFullRaw.io.rawOut.sExp @[MulRecFN.scala 90:15]
    io.rawOut.sign <= mulFullRaw.io.rawOut.sign @[MulRecFN.scala 90:15]
    io.rawOut.isZero <= mulFullRaw.io.rawOut.isZero @[MulRecFN.scala 90:15]
    io.rawOut.isInf <= mulFullRaw.io.rawOut.isInf @[MulRecFN.scala 90:15]
    io.rawOut.isNaN <= mulFullRaw.io.rawOut.isNaN @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 22) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 21, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 30:58]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_29 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_29 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_29 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_15 :
    output io : { flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_15 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_29 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module MultPE_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[MultPE.scala 21:26]
    rounding <= io.rounding @[MultPE.scala 21:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[MultPE.scala 23:26]
    tininess <= io.tininess @[MultPE.scala 23:26]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[MultPE.scala 25:26]
    use_int <= io.use_int @[MultPE.scala 25:26]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[MultPE.scala 27:27]
    when use_int : @[MultPE.scala 29:16]
      node _sign_in_0_T = asSInt(io.in_0) @[MultPE.scala 31:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[MultPE.scala 31:29]
      sign_in_0 <= _sign_in_0_T @[MultPE.scala 31:29]
      node _sign_in_1_T = asSInt(io.in_1) @[MultPE.scala 32:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[MultPE.scala 32:29]
      sign_in_1 <= _sign_in_1_T @[MultPE.scala 32:29]
      node _module_out_T = mul(sign_in_0, sign_in_1) @[MultPE.scala 35:30]
      node _module_out_T_1 = asUInt(_module_out_T) @[MultPE.scala 35:49]
      module_out <= _module_out_T_1 @[MultPE.scala 35:16]
      io.out <= module_out @[MultPE.scala 37:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[MultPE.scala 42:27]
      fN_in_0 <= io.in_0 @[MultPE.scala 42:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[MultPE.scala 43:27]
      fN_in_1 <= io.in_1 @[MultPE.scala 43:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[MultPE.scala 46:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[MultPE.scala 46:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[MultPE.scala 47:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[MultPE.scala 47:37]
      inst mulRecFN of MulRecFN_15 @[MultPE.scala 50:26]
      mulRecFN.io.roundingMode <= rounding @[MultPE.scala 51:32]
      mulRecFN.io.detectTininess <= tininess @[MultPE.scala 52:32]
      mulRecFN.io.a <= recFN_from_fN_in_0 @[MultPE.scala 53:19]
      mulRecFN.io.b <= recFN_from_fN_in_1 @[MultPE.scala 54:19]
      module_out <= mulRecFN.io.out @[MultPE.scala 56:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[MultPE.scala 58:12]

  module AddRawFN_14 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_30 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_30 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_30 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_14 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_14 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_30 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_14 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module AddRawFN_15 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_31 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_31 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_31 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_15 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_15 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_31 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_15 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip Xi_0 : UInt<32>, flip Yi_0 : UInt<32>, flip Xi_1 : UInt<32>, flip Yi_1 : UInt<32>, flip aggr_0 : UInt<32>, flip aggr_1 : UInt<32>, flip aggr_2 : UInt<32>, flip aggr_3 : UInt<32>, flip m_0_sel : UInt<2>, flip m_1_sel : UInt<2>, flip m_2_sel : UInt<2>, flip m_3_sel : UInt<2>, flip m_4_sel : UInt<2>, flip m_5_sel : UInt<2>, flip m_6_sel : UInt<2>, flip m_7_sel : UInt<2>, flip m_8_sel : UInt<2>, flip m_9_sel : UInt<2>, flip addsub_0_op : UInt<1>, flip addsub_1_op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip use_int : UInt<1>, out_0 : UInt<33>, out_1 : UInt<33>}

    reg Xi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0) @[PE.scala 47:22]
    Xi_0 <= io.Xi_0 @[PE.scala 47:22]
    reg Yi_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0) @[PE.scala 48:22]
    Yi_0 <= io.Yi_0 @[PE.scala 48:22]
    reg Xi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1) @[PE.scala 50:22]
    Xi_1 <= io.Xi_1 @[PE.scala 50:22]
    reg Yi_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1) @[PE.scala 51:22]
    Yi_1 <= io.Yi_1 @[PE.scala 51:22]
    reg aggr_0 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_0) @[PE.scala 56:24]
    aggr_0 <= io.aggr_0 @[PE.scala 56:24]
    reg aggr_1 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_1) @[PE.scala 57:24]
    aggr_1 <= io.aggr_0 @[PE.scala 57:24]
    reg aggr_2 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_2) @[PE.scala 59:24]
    aggr_2 <= io.aggr_0 @[PE.scala 59:24]
    reg aggr_3 : UInt, clock with :
      reset => (UInt<1>("h0"), aggr_3) @[PE.scala 60:24]
    aggr_3 <= io.aggr_0 @[PE.scala 60:24]
    reg m_0_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_0_sel) @[PE.scala 65:25]
    m_0_sel <= io.m_0_sel @[PE.scala 65:25]
    reg m_1_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_1_sel) @[PE.scala 66:25]
    m_1_sel <= io.m_1_sel @[PE.scala 66:25]
    reg m_2_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_2_sel) @[PE.scala 67:25]
    m_2_sel <= io.m_2_sel @[PE.scala 67:25]
    reg m_3_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_3_sel) @[PE.scala 68:25]
    m_3_sel <= io.m_3_sel @[PE.scala 68:25]
    reg m_4_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_4_sel) @[PE.scala 69:25]
    m_4_sel <= io.m_4_sel @[PE.scala 69:25]
    reg m_5_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_5_sel) @[PE.scala 70:25]
    m_5_sel <= io.m_5_sel @[PE.scala 70:25]
    reg m_6_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_6_sel) @[PE.scala 71:25]
    m_6_sel <= io.m_6_sel @[PE.scala 71:25]
    reg m_7_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_7_sel) @[PE.scala 72:25]
    m_7_sel <= io.m_7_sel @[PE.scala 72:25]
    reg m_8_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_8_sel) @[PE.scala 73:25]
    m_8_sel <= io.m_8_sel @[PE.scala 73:25]
    reg m_9_sel : UInt, clock with :
      reset => (UInt<1>("h0"), m_9_sel) @[PE.scala 74:25]
    m_9_sel <= io.m_9_sel @[PE.scala 74:25]
    reg addsub_0_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_0_op) @[PE.scala 76:29]
    addsub_0_op <= io.addsub_0_op @[PE.scala 76:29]
    reg addsub_1_op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), addsub_1_op) @[PE.scala 77:29]
    addsub_1_op <= io.addsub_1_op @[PE.scala 77:29]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE.scala 80:29]
    rounding <= io.rounding @[PE.scala 80:29]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE.scala 82:29]
    tininess <= io.tininess @[PE.scala 82:29]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE.scala 84:29]
    use_int <= io.use_int @[PE.scala 84:29]
    reg addsubModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 89:36]
    reg addsubModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 90:36]
    reg multModule_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 91:36]
    reg multModule_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 92:36]
    reg m_0_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 94:24]
    reg m_1_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 95:24]
    reg m_2_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 96:24]
    reg m_3_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 97:24]
    reg m_4_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 98:24]
    reg m_5_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 99:24]
    reg m_6_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 100:24]
    reg m_7_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 101:24]
    reg m_8_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 102:24]
    reg m_9_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE.scala 103:24]
    inst m_0 of MuxPE_70 @[PE.scala 108:19]
    m_0.clock <= clock
    m_0.reset <= reset
    inst m_1 of MuxPE_71 @[PE.scala 109:19]
    m_1.clock <= clock
    m_1.reset <= reset
    inst m_2 of MuxPE_72 @[PE.scala 110:19]
    m_2.clock <= clock
    m_2.reset <= reset
    inst m_3 of MuxPE_73 @[PE.scala 111:19]
    m_3.clock <= clock
    m_3.reset <= reset
    inst m_4 of MuxPE_74 @[PE.scala 112:19]
    m_4.clock <= clock
    m_4.reset <= reset
    inst m_5 of MuxPE_75 @[PE.scala 113:19]
    m_5.clock <= clock
    m_5.reset <= reset
    inst m_6 of MuxPE_76 @[PE.scala 114:19]
    m_6.clock <= clock
    m_6.reset <= reset
    inst m_7 of MuxPE_77 @[PE.scala 115:19]
    m_7.clock <= clock
    m_7.reset <= reset
    inst m_8 of MuxPE_78 @[PE.scala 116:19]
    m_8.clock <= clock
    m_8.reset <= reset
    inst m_9 of MuxPE_79 @[PE.scala 117:19]
    m_9.clock <= clock
    m_9.reset <= reset
    inst multModule_0 of MultPE_14 @[PE.scala 119:28]
    multModule_0.clock <= clock
    multModule_0.reset <= reset
    inst multModule_1 of MultPE_15 @[PE.scala 120:28]
    multModule_1.clock <= clock
    multModule_1.reset <= reset
    inst addsubModule_0 of AddSubPE_14 @[PE.scala 122:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    inst addsubModule_1 of AddSubPE_15 @[PE.scala 123:30]
    addsubModule_1.clock <= clock
    addsubModule_1.reset <= reset
    m_0.io.sel <= m_0_sel @[PE.scala 128:14]
    m_1.io.sel <= m_1_sel @[PE.scala 129:14]
    m_2.io.sel <= m_2_sel @[PE.scala 130:14]
    m_3.io.sel <= m_3_sel @[PE.scala 131:14]
    m_4.io.sel <= m_4_sel @[PE.scala 132:14]
    m_5.io.sel <= m_5_sel @[PE.scala 133:14]
    m_6.io.sel <= m_6_sel @[PE.scala 134:14]
    m_7.io.sel <= m_7_sel @[PE.scala 135:14]
    m_8.io.sel <= m_8_sel @[PE.scala 136:14]
    m_9.io.sel <= m_9_sel @[PE.scala 137:14]
    m_0.io.in_0 <= Xi_0 @[PE.scala 140:15]
    m_0.io.in_1 <= addsubModule_0_out @[PE.scala 141:15]
    m_0.io.in_2 <= UInt<32>("h0") @[PE.scala 142:15]
    m_0.io.in_3 <= UInt<32>("h0") @[PE.scala 143:15]
    m_0_out <= m_0.io.out @[PE.scala 144:11]
    m_1.io.in_0 <= Yi_0 @[PE.scala 146:15]
    m_1.io.in_1 <= addsubModule_0_out @[PE.scala 147:15]
    m_1.io.in_2 <= UInt<32>("h0") @[PE.scala 148:15]
    m_1.io.in_3 <= UInt<32>("h0") @[PE.scala 149:15]
    m_1_out <= m_1.io.out @[PE.scala 150:11]
    m_2.io.in_0 <= Xi_1 @[PE.scala 152:15]
    m_2.io.in_1 <= addsubModule_1_out @[PE.scala 153:15]
    m_2.io.in_2 <= UInt<32>("h0") @[PE.scala 154:15]
    m_2.io.in_3 <= UInt<32>("h0") @[PE.scala 155:15]
    m_2_out <= m_2.io.out @[PE.scala 156:11]
    m_3.io.in_0 <= Yi_1 @[PE.scala 158:15]
    m_3.io.in_1 <= addsubModule_1_out @[PE.scala 159:15]
    m_3.io.in_2 <= UInt<32>("h0") @[PE.scala 160:15]
    m_3.io.in_3 <= UInt<32>("h0") @[PE.scala 161:15]
    m_3_out <= m_3.io.out @[PE.scala 162:11]
    multModule_0.io.rounding <= rounding @[PE.scala 167:30]
    multModule_0.io.tininess <= tininess @[PE.scala 168:30]
    multModule_0.io.use_int <= use_int @[PE.scala 169:30]
    multModule_0.io.in_0 <= m_0_out @[PE.scala 170:24]
    multModule_0.io.in_1 <= m_1_out @[PE.scala 171:24]
    multModule_0_out <= multModule_0.io.out @[PE.scala 172:21]
    multModule_1.io.rounding <= rounding @[PE.scala 175:30]
    multModule_1.io.tininess <= tininess @[PE.scala 176:30]
    multModule_1.io.use_int <= use_int @[PE.scala 177:30]
    multModule_1.io.in_0 <= m_2_out @[PE.scala 178:24]
    multModule_1.io.in_1 <= m_3_out @[PE.scala 179:24]
    multModule_1_out <= multModule_1.io.out @[PE.scala 180:21]
    m_4.io.in_0 <= Xi_0 @[PE.scala 185:15]
    m_4.io.in_1 <= multModule_0_out @[PE.scala 186:15]
    m_4.io.in_2 <= aggr_0 @[PE.scala 187:15]
    m_4.io.in_3 <= UInt<32>("h0") @[PE.scala 188:15]
    m_4_out <= m_4.io.out @[PE.scala 189:15]
    m_5.io.in_0 <= Yi_0 @[PE.scala 191:15]
    m_5.io.in_1 <= multModule_1_out @[PE.scala 192:15]
    m_5.io.in_2 <= aggr_1 @[PE.scala 193:15]
    m_5.io.in_3 <= UInt<32>("h0") @[PE.scala 194:15]
    m_5_out <= m_5.io.out @[PE.scala 195:15]
    m_6.io.in_0 <= Xi_1 @[PE.scala 197:15]
    m_6.io.in_1 <= multModule_1_out @[PE.scala 198:15]
    m_6.io.in_2 <= aggr_2 @[PE.scala 199:15]
    m_6.io.in_3 <= UInt<32>("h0") @[PE.scala 200:15]
    m_6_out <= m_6.io.out @[PE.scala 201:15]
    m_7.io.in_0 <= Yi_1 @[PE.scala 203:15]
    m_7.io.in_1 <= UInt<32>("h0") @[PE.scala 204:15]
    m_7.io.in_2 <= aggr_3 @[PE.scala 205:15]
    m_7.io.in_3 <= UInt<32>("h0") @[PE.scala 206:15]
    m_7_out <= m_7.io.out @[PE.scala 207:15]
    addsubModule_0.io.op <= addsub_0_op @[PE.scala 212:32]
    addsubModule_0.io.rounding <= rounding @[PE.scala 213:32]
    addsubModule_0.io.tininess <= tininess @[PE.scala 214:32]
    addsubModule_0.io.use_int <= use_int @[PE.scala 215:32]
    addsubModule_0.io.in_0 <= m_4_out @[PE.scala 216:32]
    addsubModule_0.io.in_1 <= m_5_out @[PE.scala 217:32]
    addsubModule_0_out <= addsubModule_0.io.out @[PE.scala 218:23]
    addsubModule_1.io.op <= addsub_1_op @[PE.scala 221:32]
    addsubModule_1.io.rounding <= rounding @[PE.scala 222:32]
    addsubModule_1.io.tininess <= tininess @[PE.scala 223:32]
    addsubModule_1.io.use_int <= use_int @[PE.scala 224:32]
    addsubModule_1.io.in_0 <= m_6_out @[PE.scala 225:32]
    addsubModule_1.io.in_1 <= m_7_out @[PE.scala 226:32]
    addsubModule_1_out <= addsubModule_1.io.out @[PE.scala 227:23]
    m_8.io.in_0 <= addsubModule_0_out @[PE.scala 232:15]
    m_8.io.in_1 <= multModule_0_out @[PE.scala 233:15]
    m_8.io.in_2 <= UInt<32>("h0") @[PE.scala 234:15]
    m_8.io.in_3 <= UInt<32>("h0") @[PE.scala 235:15]
    m_8_out <= m_8.io.out @[PE.scala 236:15]
    m_9.io.in_0 <= addsubModule_1_out @[PE.scala 238:15]
    m_9.io.in_1 <= multModule_1_out @[PE.scala 239:15]
    m_9.io.in_2 <= UInt<32>("h0") @[PE.scala 240:15]
    m_9.io.in_3 <= UInt<32>("h0") @[PE.scala 241:15]
    m_9_out <= m_9.io.out @[PE.scala 242:15]
    io.out_0 <= m_8_out @[PE.scala 247:12]
    io.out_1 <= m_9_out @[PE.scala 248:12]

  module AddRawFN_16 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("ha"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h9"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h8"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h7"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h6"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h5"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h4"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h3"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h2"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h1"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h0"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = cat(_far_roundExtraMask_T_4, _far_roundExtraMask_T_5) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_7, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_9 = bits(_far_roundExtraMask_T_7, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_10 = cat(_far_roundExtraMask_T_8, _far_roundExtraMask_T_9) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_11 = cat(_far_roundExtraMask_T_6, _far_roundExtraMask_T_10) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_12 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_13 = bits(_far_roundExtraMask_T_12, 1, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_14 = bits(_far_roundExtraMask_T_13, 0, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_15 = bits(_far_roundExtraMask_T_13, 1, 1) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_16 = cat(_far_roundExtraMask_T_14, _far_roundExtraMask_T_15) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_17 = bits(_far_roundExtraMask_T_12, 2, 2) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_18 = cat(_far_roundExtraMask_T_16, _far_roundExtraMask_T_17) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_11, _far_roundExtraMask_T_18) @[Cat.scala 30:58]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_32 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 30:58]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 30:58]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 30:58]
    node _roundMask_T_54 = bits(_roundMask_T_43, 5, 4) @[Bitwise.scala 109:44]
    node _roundMask_T_55 = bits(_roundMask_T_54, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_56 = bits(_roundMask_T_54, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_57 = cat(_roundMask_T_55, _roundMask_T_56) @[Cat.scala 30:58]
    node _roundMask_T_58 = cat(_roundMask_T_53, _roundMask_T_57) @[Cat.scala 30:58]
    node _roundMask_T_59 = cat(_roundMask_T_42, _roundMask_T_58) @[Cat.scala 30:58]
    node _roundMask_T_60 = not(_roundMask_T_59) @[primitives.scala 74:36]
    node _roundMask_T_61 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_60) @[primitives.scala 74:21]
    node _roundMask_T_62 = not(_roundMask_T_61) @[primitives.scala 74:17]
    node _roundMask_T_63 = cat(_roundMask_T_62, UInt<3>("h7")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_64 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_65 = bits(_roundMask_T_64, 1, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_66 = bits(_roundMask_T_65, 0, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_67 = bits(_roundMask_T_65, 1, 1) @[Bitwise.scala 109:44]
    node _roundMask_T_68 = cat(_roundMask_T_66, _roundMask_T_67) @[Cat.scala 30:58]
    node _roundMask_T_69 = bits(_roundMask_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_70 = cat(_roundMask_T_68, _roundMask_T_69) @[Cat.scala 30:58]
    node _roundMask_T_71 = mux(roundMask_msb_3, _roundMask_T_70, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_72 = mux(roundMask_msb_1, _roundMask_T_63, _roundMask_T_71) @[primitives.scala 66:24]
    node _roundMask_T_73 = mux(roundMask_msb, _roundMask_T_72, UInt<1>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_74 = or(_roundMask_T_73, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_74, UInt<2>("h3")) @[Cat.scala 30:58]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_32 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_32 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_16 :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_16 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_32 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module AddSubPE_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip use_int : UInt<1>, flip op : UInt<1>, flip rounding : UInt<3>, flip tininess : UInt<1>, flip in_0 : UInt<32>, flip in_1 : UInt<32>, out : UInt<32>}

    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[AddSubPE.scala 22:26]
    rounding <= io.rounding @[AddSubPE.scala 22:26]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[AddSubPE.scala 24:27]
    tininess <= io.tininess @[AddSubPE.scala 24:27]
    reg op : UInt<1>, clock with :
      reset => (UInt<1>("h0"), op) @[AddSubPE.scala 26:27]
    op <= io.op @[AddSubPE.scala 26:27]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[AddSubPE.scala 28:27]
    use_int <= io.use_int @[AddSubPE.scala 28:27]
    reg module_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[AddSubPE.scala 30:27]
    when use_int : @[AddSubPE.scala 32:16]
      node _sign_in_0_T = asSInt(io.in_0) @[AddSubPE.scala 34:44]
      reg sign_in_0 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_0) @[AddSubPE.scala 34:29]
      sign_in_0 <= _sign_in_0_T @[AddSubPE.scala 34:29]
      node _sign_in_1_T = asSInt(io.in_1) @[AddSubPE.scala 35:44]
      reg sign_in_1 : SInt, clock with :
        reset => (UInt<1>("h0"), sign_in_1) @[AddSubPE.scala 35:29]
      sign_in_1 <= _sign_in_1_T @[AddSubPE.scala 35:29]
      when op : @[AddSubPE.scala 38:17]
        node _module_out_T = sub(sign_in_0, sign_in_1) @[AddSubPE.scala 39:32]
        node _module_out_T_1 = tail(_module_out_T, 1) @[AddSubPE.scala 39:32]
        node _module_out_T_2 = asSInt(_module_out_T_1) @[AddSubPE.scala 39:32]
        node _module_out_T_3 = asUInt(_module_out_T_2) @[AddSubPE.scala 39:51]
        module_out <= _module_out_T_3 @[AddSubPE.scala 39:18]
      else :
        node _module_out_T_4 = add(sign_in_0, sign_in_1) @[AddSubPE.scala 41:32]
        node _module_out_T_5 = tail(_module_out_T_4, 1) @[AddSubPE.scala 41:32]
        node _module_out_T_6 = asSInt(_module_out_T_5) @[AddSubPE.scala 41:32]
        node _module_out_T_7 = asUInt(_module_out_T_6) @[AddSubPE.scala 41:51]
        module_out <= _module_out_T_7 @[AddSubPE.scala 41:18]
      io.out <= module_out @[AddSubPE.scala 44:12]
    else :
      reg fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_0) @[AddSubPE.scala 49:27]
      fN_in_0 <= io.in_0 @[AddSubPE.scala 49:27]
      reg fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), fN_in_1) @[AddSubPE.scala 50:27]
      fN_in_1 <= io.in_1 @[AddSubPE.scala 50:27]
      node recFN_from_fN_in_0_rawIn_sign = bits(fN_in_0, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_0_rawIn_expIn = bits(fN_in_0, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_0_rawIn_fractIn = bits(fN_in_0, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_0_rawIn_isZeroExpIn = eq(recFN_from_fN_in_0_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_0_rawIn_isZeroFractIn = eq(recFN_from_fN_in_0_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_0_rawIn_normDist_T = bits(recFN_from_fN_in_0_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_1 = bits(recFN_from_fN_in_0_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_2 = bits(recFN_from_fN_in_0_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_3 = bits(recFN_from_fN_in_0_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_4 = bits(recFN_from_fN_in_0_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_5 = bits(recFN_from_fN_in_0_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_6 = bits(recFN_from_fN_in_0_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_7 = bits(recFN_from_fN_in_0_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_8 = bits(recFN_from_fN_in_0_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_9 = bits(recFN_from_fN_in_0_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_10 = bits(recFN_from_fN_in_0_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_11 = bits(recFN_from_fN_in_0_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_12 = bits(recFN_from_fN_in_0_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_13 = bits(recFN_from_fN_in_0_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_14 = bits(recFN_from_fN_in_0_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_15 = bits(recFN_from_fN_in_0_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_16 = bits(recFN_from_fN_in_0_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_17 = bits(recFN_from_fN_in_0_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_18 = bits(recFN_from_fN_in_0_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_19 = bits(recFN_from_fN_in_0_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_20 = bits(recFN_from_fN_in_0_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_21 = bits(recFN_from_fN_in_0_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_22 = bits(recFN_from_fN_in_0_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_0_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_0_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_0_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_0_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_0_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_0_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_0_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_0_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_0_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_0_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_0_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_0_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_0_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_0_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_0_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_0_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_0_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_0_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_0_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_0_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_0_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_0_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_0_rawIn_normDist = mux(_recFN_from_fN_in_0_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T = dshl(recFN_from_fN_in_0_rawIn_fractIn, recFN_from_fN_in_0_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_0_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_0_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_0_rawIn_subnormFract = shl(_recFN_from_fN_in_0_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T = xor(recFN_from_fN_in_0_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, _recFN_from_fN_in_0_rawIn_adjustedExp_T, recFN_from_fN_in_0_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_0_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_0_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_0_rawIn_adjustedExp_T_1, _recFN_from_fN_in_0_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_adjustedExp = tail(_recFN_from_fN_in_0_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_0_rawIn_isZero = and(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_0_rawIn_isSpecial_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_0_rawIn_isSpecial = eq(_recFN_from_fN_in_0_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_0_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_0_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T = eq(recFN_from_fN_in_0_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_0_rawIn_isSpecial, _recFN_from_fN_in_0_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_0_rawIn.isNaN <= _recFN_from_fN_in_0_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_0_rawIn_out_isInf_T = and(recFN_from_fN_in_0_rawIn_isSpecial, recFN_from_fN_in_0_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_0_rawIn.isInf <= _recFN_from_fN_in_0_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_0_rawIn.isZero <= recFN_from_fN_in_0_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_0_rawIn.sign <= recFN_from_fN_in_0_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T = bits(recFN_from_fN_in_0_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_0_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_0_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_0_rawIn.sExp <= _recFN_from_fN_in_0_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_0_rawIn_out_sig_T = eq(recFN_from_fN_in_0_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_0_rawIn_isZeroExpIn, recFN_from_fN_in_0_rawIn_subnormFract, recFN_from_fN_in_0_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_0_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_0_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_0_rawIn_out_sig_hi, _recFN_from_fN_in_0_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_0_rawIn.sig <= _recFN_from_fN_in_0_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_0_T = bits(recFN_from_fN_in_0_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_0_T_1 = mux(recFN_from_fN_in_0_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_0_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_0_T_2 = mux(recFN_from_fN_in_0_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_0_T_3 = or(_recFN_from_fN_in_0_T_1, _recFN_from_fN_in_0_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_0_T_4 = bits(recFN_from_fN_in_0_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_0_T_5 = bits(recFN_from_fN_in_0_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_0_lo = cat(_recFN_from_fN_in_0_T_4, _recFN_from_fN_in_0_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_0_hi = cat(recFN_from_fN_in_0_rawIn.sign, _recFN_from_fN_in_0_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_0_T_6 = cat(recFN_from_fN_in_0_hi, recFN_from_fN_in_0_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_0 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_0) @[AddSubPE.scala 53:37]
      recFN_from_fN_in_0 <= _recFN_from_fN_in_0_T_6 @[AddSubPE.scala 53:37]
      node recFN_from_fN_in_1_rawIn_sign = bits(fN_in_1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node recFN_from_fN_in_1_rawIn_expIn = bits(fN_in_1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node recFN_from_fN_in_1_rawIn_fractIn = bits(fN_in_1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node recFN_from_fN_in_1_rawIn_isZeroExpIn = eq(recFN_from_fN_in_1_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
      node recFN_from_fN_in_1_rawIn_isZeroFractIn = eq(recFN_from_fN_in_1_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
      node _recFN_from_fN_in_1_rawIn_normDist_T = bits(recFN_from_fN_in_1_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_1 = bits(recFN_from_fN_in_1_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_2 = bits(recFN_from_fN_in_1_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_3 = bits(recFN_from_fN_in_1_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_4 = bits(recFN_from_fN_in_1_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_5 = bits(recFN_from_fN_in_1_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_6 = bits(recFN_from_fN_in_1_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_7 = bits(recFN_from_fN_in_1_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_8 = bits(recFN_from_fN_in_1_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_9 = bits(recFN_from_fN_in_1_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_10 = bits(recFN_from_fN_in_1_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_11 = bits(recFN_from_fN_in_1_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_12 = bits(recFN_from_fN_in_1_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_13 = bits(recFN_from_fN_in_1_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_14 = bits(recFN_from_fN_in_1_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_15 = bits(recFN_from_fN_in_1_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_16 = bits(recFN_from_fN_in_1_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_17 = bits(recFN_from_fN_in_1_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_18 = bits(recFN_from_fN_in_1_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_19 = bits(recFN_from_fN_in_1_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_20 = bits(recFN_from_fN_in_1_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_21 = bits(recFN_from_fN_in_1_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_22 = bits(recFN_from_fN_in_1_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _recFN_from_fN_in_1_rawIn_normDist_T_23 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_1, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_24 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_2, UInt<5>("h14"), _recFN_from_fN_in_1_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_25 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_3, UInt<5>("h13"), _recFN_from_fN_in_1_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_26 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_4, UInt<5>("h12"), _recFN_from_fN_in_1_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_27 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_5, UInt<5>("h11"), _recFN_from_fN_in_1_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_28 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_6, UInt<5>("h10"), _recFN_from_fN_in_1_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_29 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_7, UInt<4>("hf"), _recFN_from_fN_in_1_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_30 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_8, UInt<4>("he"), _recFN_from_fN_in_1_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_31 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_9, UInt<4>("hd"), _recFN_from_fN_in_1_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_32 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_10, UInt<4>("hc"), _recFN_from_fN_in_1_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_33 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_11, UInt<4>("hb"), _recFN_from_fN_in_1_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_34 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_12, UInt<4>("ha"), _recFN_from_fN_in_1_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_35 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_13, UInt<4>("h9"), _recFN_from_fN_in_1_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_36 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_14, UInt<4>("h8"), _recFN_from_fN_in_1_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_37 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_15, UInt<3>("h7"), _recFN_from_fN_in_1_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_38 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_16, UInt<3>("h6"), _recFN_from_fN_in_1_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_39 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_17, UInt<3>("h5"), _recFN_from_fN_in_1_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_40 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_18, UInt<3>("h4"), _recFN_from_fN_in_1_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_41 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_19, UInt<2>("h3"), _recFN_from_fN_in_1_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_42 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_20, UInt<2>("h2"), _recFN_from_fN_in_1_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_normDist_T_43 = mux(_recFN_from_fN_in_1_rawIn_normDist_T_21, UInt<1>("h1"), _recFN_from_fN_in_1_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node recFN_from_fN_in_1_rawIn_normDist = mux(_recFN_from_fN_in_1_rawIn_normDist_T_22, UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T = dshl(recFN_from_fN_in_1_rawIn_fractIn, recFN_from_fN_in_1_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _recFN_from_fN_in_1_rawIn_subnormFract_T_1 = bits(_recFN_from_fN_in_1_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node recFN_from_fN_in_1_rawIn_subnormFract = shl(_recFN_from_fN_in_1_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T = xor(recFN_from_fN_in_1_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, _recFN_from_fN_in_1_rawIn_adjustedExp_T, recFN_from_fN_in_1_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_2 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _recFN_from_fN_in_1_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _recFN_from_fN_in_1_rawIn_adjustedExp_T_4 = add(_recFN_from_fN_in_1_rawIn_adjustedExp_T_1, _recFN_from_fN_in_1_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_adjustedExp = tail(_recFN_from_fN_in_1_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node recFN_from_fN_in_1_rawIn_isZero = and(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _recFN_from_fN_in_1_rawIn_isSpecial_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node recFN_from_fN_in_1_rawIn_isSpecial = eq(_recFN_from_fN_in_1_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
      wire recFN_from_fN_in_1_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      recFN_from_fN_in_1_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T = eq(recFN_from_fN_in_1_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
      node _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 = and(recFN_from_fN_in_1_rawIn_isSpecial, _recFN_from_fN_in_1_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      recFN_from_fN_in_1_rawIn.isNaN <= _recFN_from_fN_in_1_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _recFN_from_fN_in_1_rawIn_out_isInf_T = and(recFN_from_fN_in_1_rawIn_isSpecial, recFN_from_fN_in_1_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      recFN_from_fN_in_1_rawIn.isInf <= _recFN_from_fN_in_1_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      recFN_from_fN_in_1_rawIn.isZero <= recFN_from_fN_in_1_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      recFN_from_fN_in_1_rawIn.sign <= recFN_from_fN_in_1_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T = bits(recFN_from_fN_in_1_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _recFN_from_fN_in_1_rawIn_out_sExp_T_1 = cvt(_recFN_from_fN_in_1_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      recFN_from_fN_in_1_rawIn.sExp <= _recFN_from_fN_in_1_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node _recFN_from_fN_in_1_rawIn_out_sig_T = eq(recFN_from_fN_in_1_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_1 = mux(recFN_from_fN_in_1_rawIn_isZeroExpIn, recFN_from_fN_in_1_rawIn_subnormFract, recFN_from_fN_in_1_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node recFN_from_fN_in_1_rawIn_out_sig_hi = cat(UInt<1>("h0"), _recFN_from_fN_in_1_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_rawIn_out_sig_T_2 = cat(recFN_from_fN_in_1_rawIn_out_sig_hi, _recFN_from_fN_in_1_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      recFN_from_fN_in_1_rawIn.sig <= _recFN_from_fN_in_1_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
      node _recFN_from_fN_in_1_T = bits(recFN_from_fN_in_1_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _recFN_from_fN_in_1_T_1 = mux(recFN_from_fN_in_1_rawIn.isZero, UInt<3>("h0"), _recFN_from_fN_in_1_T) @[recFNFromFN.scala 48:16]
      node _recFN_from_fN_in_1_T_2 = mux(recFN_from_fN_in_1_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
      node _recFN_from_fN_in_1_T_3 = or(_recFN_from_fN_in_1_T_1, _recFN_from_fN_in_1_T_2) @[recFNFromFN.scala 48:79]
      node _recFN_from_fN_in_1_T_4 = bits(recFN_from_fN_in_1_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node _recFN_from_fN_in_1_T_5 = bits(recFN_from_fN_in_1_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node recFN_from_fN_in_1_lo = cat(_recFN_from_fN_in_1_T_4, _recFN_from_fN_in_1_T_5) @[Cat.scala 30:58]
      node recFN_from_fN_in_1_hi = cat(recFN_from_fN_in_1_rawIn.sign, _recFN_from_fN_in_1_T_3) @[Cat.scala 30:58]
      node _recFN_from_fN_in_1_T_6 = cat(recFN_from_fN_in_1_hi, recFN_from_fN_in_1_lo) @[Cat.scala 30:58]
      reg recFN_from_fN_in_1 : UInt, clock with :
        reset => (UInt<1>("h0"), recFN_from_fN_in_1) @[AddSubPE.scala 54:37]
      recFN_from_fN_in_1 <= _recFN_from_fN_in_1_T_6 @[AddSubPE.scala 54:37]
      inst addRecFN of AddRecFN_16 @[AddSubPE.scala 57:26]
      addRecFN.io.subOp <= op @[AddSubPE.scala 58:23]
      addRecFN.io.roundingMode <= rounding @[AddSubPE.scala 59:32]
      addRecFN.io.detectTininess <= tininess @[AddSubPE.scala 60:32]
      addRecFN.io.a <= recFN_from_fN_in_0 @[AddSubPE.scala 61:19]
      addRecFN.io.b <= recFN_from_fN_in_1 @[AddSubPE.scala 62:19]
      module_out <= addRecFN.io.out @[AddSubPE.scala 64:16]
      node io_out_rawIn_exp = bits(module_out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
      node _io_out_rawIn_isZero_T = bits(io_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
      node io_out_rawIn_isZero = eq(_io_out_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
      node _io_out_rawIn_isSpecial_T = bits(io_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
      node io_out_rawIn_isSpecial = eq(_io_out_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
      wire io_out_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
      io_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
      node _io_out_rawIn_out_isNaN_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
      node _io_out_rawIn_out_isNaN_T_1 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
      io_out_rawIn.isNaN <= _io_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
      node _io_out_rawIn_out_isInf_T = bits(io_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
      node _io_out_rawIn_out_isInf_T_1 = eq(_io_out_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
      node _io_out_rawIn_out_isInf_T_2 = and(io_out_rawIn_isSpecial, _io_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
      io_out_rawIn.isInf <= _io_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
      io_out_rawIn.isZero <= io_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
      node _io_out_rawIn_out_sign_T = bits(module_out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
      io_out_rawIn.sign <= _io_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
      node _io_out_rawIn_out_sExp_T = cvt(io_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
      io_out_rawIn.sExp <= _io_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
      node _io_out_rawIn_out_sig_T = eq(io_out_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
      node _io_out_rawIn_out_sig_T_1 = bits(module_out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
      node io_out_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_rawIn_out_sig_T) @[Cat.scala 30:58]
      node _io_out_rawIn_out_sig_T_2 = cat(io_out_rawIn_out_sig_hi, _io_out_rawIn_out_sig_T_1) @[Cat.scala 30:58]
      io_out_rawIn.sig <= _io_out_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
      node io_out_isSubnormal = lt(io_out_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 50:39]
      node _io_out_denormShiftDist_T = bits(io_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
      node _io_out_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
      node io_out_denormShiftDist = tail(_io_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
      node _io_out_denormFract_T = shr(io_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
      node _io_out_denormFract_T_1 = dshr(_io_out_denormFract_T, io_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
      node io_out_denormFract = bits(_io_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
      node _io_out_expOut_T = bits(io_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
      node _io_out_expOut_T_1 = sub(_io_out_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_2 = tail(_io_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
      node _io_out_expOut_T_3 = mux(io_out_isSubnormal, UInt<1>("h0"), _io_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
      node _io_out_expOut_T_4 = or(io_out_rawIn.isNaN, io_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
      node _io_out_expOut_T_5 = bits(_io_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
      node _io_out_expOut_T_6 = mux(_io_out_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
      node io_out_expOut = or(_io_out_expOut_T_3, _io_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
      node _io_out_fractOut_T = bits(io_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
      node _io_out_fractOut_T_1 = mux(io_out_rawIn.isInf, UInt<1>("h0"), _io_out_fractOut_T) @[fNFromRecFN.scala 63:20]
      node io_out_fractOut = mux(io_out_isSubnormal, io_out_denormFract, _io_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
      node io_out_hi = cat(io_out_rawIn.sign, io_out_expOut) @[Cat.scala 30:58]
      node _io_out_T = cat(io_out_hi, io_out_fractOut) @[Cat.scala 30:58]
      io.out <= _io_out_T @[AddSubPE.scala 66:12]

  module PE_8 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip Xi_0_in_0 : UInt<32>, flip Yi_0_in_0 : UInt<32>, flip Xi_0_in_1 : UInt<32>, flip Yi_0_in_1 : UInt<32>, flip Xi_1_in_0 : UInt<32>, flip Yi_1_in_0 : UInt<32>, flip Xi_1_in_1 : UInt<32>, flip Yi_1_in_1 : UInt<32>, flip Xi_2_in_0 : UInt<32>, flip Yi_2_in_0 : UInt<32>, flip Xi_2_in_1 : UInt<32>, flip Yi_2_in_1 : UInt<32>, flip Xi_3_in_0 : UInt<32>, flip Yi_3_in_0 : UInt<32>, flip Xi_3_in_1 : UInt<32>, flip Yi_3_in_1 : UInt<32>, flip Xi_4_in_0 : UInt<32>, flip Yi_4_in_0 : UInt<32>, flip Xi_4_in_1 : UInt<32>, flip Yi_4_in_1 : UInt<32>, flip Xi_5_in_0 : UInt<32>, flip Yi_5_in_0 : UInt<32>, flip Xi_5_in_1 : UInt<32>, flip Yi_5_in_1 : UInt<32>, flip Xi_6_in_0 : UInt<32>, flip Yi_6_in_0 : UInt<32>, flip Xi_6_in_1 : UInt<32>, flip Yi_6_in_1 : UInt<32>, flip Xi_7_in_0 : UInt<32>, flip Yi_7_in_0 : UInt<32>, flip Xi_7_in_1 : UInt<32>, flip Yi_7_in_1 : UInt<32>, flip op_type : UInt<2>, flip use_int : UInt<1>, flip tininess : UInt<1>, flip rounding : UInt<3>, out : UInt<32>}

    reg Xi_0_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0_in_0) @[PE_8.scala 64:27]
    Xi_0_in_0 <= io.Xi_0_in_0 @[PE_8.scala 64:27]
    reg Yi_0_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0_in_0) @[PE_8.scala 65:27]
    Yi_0_in_0 <= io.Yi_0_in_0 @[PE_8.scala 65:27]
    reg Xi_0_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_0_in_1) @[PE_8.scala 66:27]
    Xi_0_in_1 <= io.Xi_0_in_1 @[PE_8.scala 66:27]
    reg Yi_0_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_0_in_1) @[PE_8.scala 67:27]
    Yi_0_in_1 <= io.Yi_0_in_1 @[PE_8.scala 67:27]
    reg aggr_0_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 68:29]
    reg aggr_0_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 69:29]
    reg aggr_0_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 70:29]
    reg aggr_0_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 71:29]
    reg Xi_1_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1_in_0) @[PE_8.scala 73:27]
    Xi_1_in_0 <= io.Xi_1_in_0 @[PE_8.scala 73:27]
    reg Yi_1_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1_in_0) @[PE_8.scala 74:27]
    Yi_1_in_0 <= io.Yi_1_in_0 @[PE_8.scala 74:27]
    reg Xi_1_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_1_in_1) @[PE_8.scala 75:27]
    Xi_1_in_1 <= io.Xi_1_in_1 @[PE_8.scala 75:27]
    reg Yi_1_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_1_in_1) @[PE_8.scala 76:27]
    Yi_1_in_1 <= io.Yi_1_in_1 @[PE_8.scala 76:27]
    reg aggr_1_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 77:29]
    reg aggr_1_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 78:29]
    reg aggr_1_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 79:29]
    reg aggr_1_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 80:29]
    reg Xi_2_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_2_in_0) @[PE_8.scala 82:27]
    Xi_2_in_0 <= io.Xi_2_in_0 @[PE_8.scala 82:27]
    reg Yi_2_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_2_in_0) @[PE_8.scala 83:27]
    Yi_2_in_0 <= io.Yi_2_in_0 @[PE_8.scala 83:27]
    reg Xi_2_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_2_in_1) @[PE_8.scala 84:27]
    Xi_2_in_1 <= io.Xi_2_in_1 @[PE_8.scala 84:27]
    reg Yi_2_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_2_in_1) @[PE_8.scala 85:27]
    Yi_2_in_1 <= io.Yi_2_in_1 @[PE_8.scala 85:27]
    reg aggr_2_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 86:29]
    reg aggr_2_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 87:29]
    reg aggr_2_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 88:29]
    reg aggr_2_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 89:29]
    reg Xi_3_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_3_in_0) @[PE_8.scala 91:27]
    Xi_3_in_0 <= io.Xi_3_in_0 @[PE_8.scala 91:27]
    reg Yi_3_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_3_in_0) @[PE_8.scala 92:27]
    Yi_3_in_0 <= io.Yi_3_in_0 @[PE_8.scala 92:27]
    reg Xi_3_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_3_in_1) @[PE_8.scala 93:27]
    Xi_3_in_1 <= io.Xi_3_in_1 @[PE_8.scala 93:27]
    reg Yi_3_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_3_in_1) @[PE_8.scala 94:27]
    Yi_3_in_1 <= io.Yi_3_in_1 @[PE_8.scala 94:27]
    reg aggr_3_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 95:29]
    reg aggr_3_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 96:29]
    reg aggr_3_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 97:29]
    reg aggr_3_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 98:29]
    reg Xi_4_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_4_in_0) @[PE_8.scala 100:27]
    Xi_4_in_0 <= io.Xi_4_in_0 @[PE_8.scala 100:27]
    reg Yi_4_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_4_in_0) @[PE_8.scala 101:27]
    Yi_4_in_0 <= io.Yi_4_in_0 @[PE_8.scala 101:27]
    reg Xi_4_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_4_in_1) @[PE_8.scala 102:27]
    Xi_4_in_1 <= io.Xi_4_in_1 @[PE_8.scala 102:27]
    reg Yi_4_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_4_in_1) @[PE_8.scala 103:27]
    Yi_4_in_1 <= io.Yi_4_in_1 @[PE_8.scala 103:27]
    reg aggr_4_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 104:29]
    reg aggr_4_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 105:29]
    reg aggr_4_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 106:29]
    reg aggr_4_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 107:29]
    reg Xi_5_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_5_in_0) @[PE_8.scala 109:27]
    Xi_5_in_0 <= io.Xi_5_in_0 @[PE_8.scala 109:27]
    reg Yi_5_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_5_in_0) @[PE_8.scala 110:27]
    Yi_5_in_0 <= io.Yi_5_in_0 @[PE_8.scala 110:27]
    reg Xi_5_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_5_in_1) @[PE_8.scala 111:27]
    Xi_5_in_1 <= io.Xi_5_in_1 @[PE_8.scala 111:27]
    reg Yi_5_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_5_in_1) @[PE_8.scala 112:27]
    Yi_5_in_1 <= io.Yi_5_in_1 @[PE_8.scala 112:27]
    reg aggr_5_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 113:29]
    reg aggr_5_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 114:29]
    reg aggr_5_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 115:29]
    reg aggr_5_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 116:29]
    reg Xi_6_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_6_in_0) @[PE_8.scala 118:27]
    Xi_6_in_0 <= io.Xi_6_in_0 @[PE_8.scala 118:27]
    reg Yi_6_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_6_in_0) @[PE_8.scala 119:27]
    Yi_6_in_0 <= io.Yi_6_in_0 @[PE_8.scala 119:27]
    reg Xi_6_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_6_in_1) @[PE_8.scala 120:27]
    Xi_6_in_1 <= io.Xi_6_in_1 @[PE_8.scala 120:27]
    reg Yi_6_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_6_in_1) @[PE_8.scala 121:27]
    Yi_6_in_1 <= io.Yi_6_in_1 @[PE_8.scala 121:27]
    reg aggr_6_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 122:29]
    reg aggr_6_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 123:29]
    reg aggr_6_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 124:29]
    reg aggr_6_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 125:29]
    reg Xi_7_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_7_in_0) @[PE_8.scala 127:27]
    Xi_7_in_0 <= io.Xi_7_in_0 @[PE_8.scala 127:27]
    reg Yi_7_in_0 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_7_in_0) @[PE_8.scala 128:27]
    Yi_7_in_0 <= io.Yi_7_in_0 @[PE_8.scala 128:27]
    reg Xi_7_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Xi_7_in_1) @[PE_8.scala 129:27]
    Xi_7_in_1 <= io.Xi_7_in_1 @[PE_8.scala 129:27]
    reg Yi_7_in_1 : UInt, clock with :
      reset => (UInt<1>("h0"), Yi_7_in_1) @[PE_8.scala 130:27]
    Yi_7_in_1 <= io.Yi_7_in_1 @[PE_8.scala 130:27]
    reg aggr_7_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 131:29]
    reg aggr_7_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 132:29]
    reg aggr_7_in_2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 133:29]
    reg aggr_7_in_3 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 134:29]
    reg m_0_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 139:25]
    reg m_1_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 140:25]
    reg m_2_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 141:25]
    reg m_3_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 142:25]
    reg m_4_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[PE_8.scala 143:25]
    reg m_5_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 144:25]
    reg m_6_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 145:25]
    reg m_7_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 146:25]
    reg m_8_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 147:25]
    reg m_9_sel : UInt<2>, clock with :
      reset => (reset, UInt<2>("h1")) @[PE_8.scala 148:25]
    reg op_type : UInt, clock with :
      reset => (UInt<1>("h0"), op_type) @[PE_8.scala 150:26]
    op_type <= io.op_type @[PE_8.scala 150:26]
    reg addsub_0_op : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[PE_8.scala 153:28]
    reg addsub_1_op : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[PE_8.scala 154:28]
    reg rounding : UInt, clock with :
      reset => (UInt<1>("h0"), rounding) @[PE_8.scala 157:28]
    rounding <= io.rounding @[PE_8.scala 157:28]
    reg tininess : UInt, clock with :
      reset => (UInt<1>("h0"), tininess) @[PE_8.scala 159:28]
    tininess <= io.tininess @[PE_8.scala 159:28]
    reg use_int : UInt<1>, clock with :
      reset => (UInt<1>("h0"), use_int) @[PE_8.scala 161:28]
    use_int <= io.use_int @[PE_8.scala 161:28]
    reg pe_0_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 166:29]
    reg pe_0_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 167:29]
    reg pe_1_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 168:29]
    reg pe_1_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 169:29]
    reg pe_2_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 170:29]
    reg pe_2_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 171:29]
    reg pe_3_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 172:29]
    reg pe_3_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 173:29]
    reg pe_4_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 174:29]
    reg pe_4_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 175:29]
    reg pe_5_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 176:29]
    reg pe_5_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 177:29]
    reg pe_6_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 178:29]
    reg pe_6_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 179:29]
    reg pe_7_out_0 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 180:29]
    reg pe_7_out_1 : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 181:29]
    reg addsum_out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 183:29]
    reg out : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[PE_8.scala 184:29]
    reg addsum_in_0 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 189:28]
    reg addsum_in_1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[PE_8.scala 190:28]
    reg dbg_fsm : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[PE_8.scala 195:24]
    reg dbg_opt : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[PE_8.scala 196:24]
    inst pe_0 of PE @[PE_8.scala 201:20]
    pe_0.clock <= clock
    pe_0.reset <= reset
    pe_0.io.Xi_0 <= Xi_0_in_0 @[PE_8.scala 202:16]
    pe_0.io.Yi_0 <= Yi_0_in_0 @[PE_8.scala 203:16]
    pe_0.io.Xi_1 <= Xi_0_in_1 @[PE_8.scala 204:16]
    pe_0.io.Yi_1 <= Yi_0_in_1 @[PE_8.scala 205:16]
    pe_0.io.aggr_0 <= aggr_0_in_0 @[PE_8.scala 206:22]
    pe_0.io.aggr_1 <= aggr_0_in_1 @[PE_8.scala 207:22]
    pe_0.io.aggr_2 <= aggr_0_in_2 @[PE_8.scala 208:22]
    pe_0.io.aggr_3 <= aggr_0_in_3 @[PE_8.scala 209:22]
    pe_0.io.m_0_sel <= m_0_sel @[PE_8.scala 210:22]
    pe_0.io.m_1_sel <= m_1_sel @[PE_8.scala 211:22]
    pe_0.io.m_2_sel <= m_2_sel @[PE_8.scala 212:22]
    pe_0.io.m_3_sel <= m_3_sel @[PE_8.scala 213:22]
    pe_0.io.m_4_sel <= m_4_sel @[PE_8.scala 214:22]
    pe_0.io.m_5_sel <= m_5_sel @[PE_8.scala 215:22]
    pe_0.io.m_6_sel <= m_6_sel @[PE_8.scala 216:22]
    pe_0.io.m_7_sel <= m_7_sel @[PE_8.scala 217:22]
    pe_0.io.m_8_sel <= m_8_sel @[PE_8.scala 218:22]
    pe_0.io.m_9_sel <= m_9_sel @[PE_8.scala 219:22]
    pe_0.io.addsub_0_op <= addsub_0_op @[PE_8.scala 220:23]
    pe_0.io.addsub_1_op <= addsub_1_op @[PE_8.scala 221:23]
    pe_0.io.rounding <= rounding @[PE_8.scala 222:23]
    pe_0.io.tininess <= tininess @[PE_8.scala 223:23]
    pe_0.io.use_int <= use_int @[PE_8.scala 224:23]
    pe_0_out_0 <= pe_0.io.out_0 @[PE_8.scala 225:14]
    pe_0_out_1 <= pe_0.io.out_1 @[PE_8.scala 226:14]
    inst pe_1 of PE_1 @[PE_8.scala 229:20]
    pe_1.clock <= clock
    pe_1.reset <= reset
    pe_1.io.Xi_0 <= Xi_1_in_0 @[PE_8.scala 230:16]
    pe_1.io.Yi_0 <= Yi_1_in_0 @[PE_8.scala 231:16]
    pe_1.io.Xi_1 <= Xi_1_in_1 @[PE_8.scala 232:16]
    pe_1.io.Yi_1 <= Yi_1_in_1 @[PE_8.scala 233:16]
    pe_1.io.aggr_0 <= aggr_1_in_0 @[PE_8.scala 234:22]
    pe_1.io.aggr_1 <= aggr_1_in_1 @[PE_8.scala 235:22]
    pe_1.io.aggr_2 <= aggr_1_in_2 @[PE_8.scala 236:22]
    pe_1.io.aggr_3 <= aggr_1_in_3 @[PE_8.scala 237:22]
    pe_1.io.m_0_sel <= m_0_sel @[PE_8.scala 238:23]
    pe_1.io.m_1_sel <= m_1_sel @[PE_8.scala 239:23]
    pe_1.io.m_2_sel <= m_2_sel @[PE_8.scala 240:23]
    pe_1.io.m_3_sel <= m_3_sel @[PE_8.scala 241:23]
    pe_1.io.m_4_sel <= m_4_sel @[PE_8.scala 242:23]
    pe_1.io.m_5_sel <= m_5_sel @[PE_8.scala 243:23]
    pe_1.io.m_6_sel <= m_6_sel @[PE_8.scala 244:23]
    pe_1.io.m_7_sel <= m_7_sel @[PE_8.scala 245:23]
    pe_1.io.m_8_sel <= m_8_sel @[PE_8.scala 246:23]
    pe_1.io.m_9_sel <= m_9_sel @[PE_8.scala 247:23]
    pe_1.io.addsub_0_op <= addsub_0_op @[PE_8.scala 248:23]
    pe_1.io.addsub_1_op <= addsub_1_op @[PE_8.scala 249:23]
    pe_1.io.rounding <= rounding @[PE_8.scala 250:23]
    pe_1.io.tininess <= tininess @[PE_8.scala 251:23]
    pe_1.io.use_int <= use_int @[PE_8.scala 252:23]
    pe_1_out_0 <= pe_1.io.out_0 @[PE_8.scala 253:14]
    pe_1_out_1 <= pe_1.io.out_1 @[PE_8.scala 254:14]
    inst pe_2 of PE_2 @[PE_8.scala 257:20]
    pe_2.clock <= clock
    pe_2.reset <= reset
    pe_2.io.Xi_0 <= Xi_2_in_0 @[PE_8.scala 258:16]
    pe_2.io.Yi_0 <= Yi_2_in_0 @[PE_8.scala 259:16]
    pe_2.io.Xi_1 <= Xi_2_in_1 @[PE_8.scala 260:16]
    pe_2.io.Yi_1 <= Yi_2_in_1 @[PE_8.scala 261:16]
    pe_2.io.aggr_0 <= aggr_2_in_0 @[PE_8.scala 262:22]
    pe_2.io.aggr_1 <= aggr_2_in_1 @[PE_8.scala 263:22]
    pe_2.io.aggr_2 <= aggr_2_in_2 @[PE_8.scala 264:22]
    pe_2.io.aggr_3 <= aggr_2_in_3 @[PE_8.scala 265:22]
    pe_2.io.m_0_sel <= m_0_sel @[PE_8.scala 266:23]
    pe_2.io.m_1_sel <= m_1_sel @[PE_8.scala 267:23]
    pe_2.io.m_2_sel <= m_2_sel @[PE_8.scala 268:23]
    pe_2.io.m_3_sel <= m_3_sel @[PE_8.scala 269:23]
    pe_2.io.m_4_sel <= m_4_sel @[PE_8.scala 270:23]
    pe_2.io.m_5_sel <= m_5_sel @[PE_8.scala 271:23]
    pe_2.io.m_6_sel <= m_6_sel @[PE_8.scala 272:23]
    pe_2.io.m_7_sel <= m_7_sel @[PE_8.scala 273:23]
    pe_2.io.m_8_sel <= m_8_sel @[PE_8.scala 274:23]
    pe_2.io.m_9_sel <= m_9_sel @[PE_8.scala 275:23]
    pe_2.io.addsub_0_op <= addsub_0_op @[PE_8.scala 276:23]
    pe_2.io.addsub_1_op <= addsub_1_op @[PE_8.scala 277:23]
    pe_2.io.rounding <= rounding @[PE_8.scala 278:23]
    pe_2.io.tininess <= tininess @[PE_8.scala 279:23]
    pe_2.io.use_int <= use_int @[PE_8.scala 280:23]
    pe_2_out_0 <= pe_2.io.out_0 @[PE_8.scala 281:14]
    pe_2_out_1 <= pe_2.io.out_1 @[PE_8.scala 282:14]
    inst pe_3 of PE_3 @[PE_8.scala 284:20]
    pe_3.clock <= clock
    pe_3.reset <= reset
    pe_3.io.Xi_0 <= Xi_3_in_0 @[PE_8.scala 285:16]
    pe_3.io.Yi_0 <= Yi_3_in_0 @[PE_8.scala 286:16]
    pe_3.io.Xi_1 <= Xi_3_in_1 @[PE_8.scala 287:16]
    pe_3.io.Yi_1 <= Yi_3_in_1 @[PE_8.scala 288:16]
    pe_3.io.aggr_0 <= aggr_3_in_0 @[PE_8.scala 289:22]
    pe_3.io.aggr_1 <= aggr_3_in_1 @[PE_8.scala 290:22]
    pe_3.io.aggr_2 <= aggr_3_in_2 @[PE_8.scala 291:22]
    pe_3.io.aggr_3 <= aggr_3_in_3 @[PE_8.scala 292:22]
    pe_3.io.m_0_sel <= m_0_sel @[PE_8.scala 293:23]
    pe_3.io.m_1_sel <= m_1_sel @[PE_8.scala 294:23]
    pe_3.io.m_2_sel <= m_2_sel @[PE_8.scala 295:23]
    pe_3.io.m_3_sel <= m_3_sel @[PE_8.scala 296:23]
    pe_3.io.m_4_sel <= m_4_sel @[PE_8.scala 297:23]
    pe_3.io.m_5_sel <= m_5_sel @[PE_8.scala 298:23]
    pe_3.io.m_6_sel <= m_6_sel @[PE_8.scala 299:23]
    pe_3.io.m_7_sel <= m_7_sel @[PE_8.scala 300:23]
    pe_3.io.m_8_sel <= m_8_sel @[PE_8.scala 301:23]
    pe_3.io.m_9_sel <= m_9_sel @[PE_8.scala 302:23]
    pe_3.io.addsub_0_op <= addsub_0_op @[PE_8.scala 303:23]
    pe_3.io.addsub_1_op <= addsub_1_op @[PE_8.scala 304:23]
    pe_3.io.rounding <= rounding @[PE_8.scala 305:23]
    pe_3.io.tininess <= tininess @[PE_8.scala 306:23]
    pe_3.io.use_int <= use_int @[PE_8.scala 307:23]
    pe_3_out_0 <= pe_3.io.out_0 @[PE_8.scala 308:14]
    pe_3_out_1 <= pe_3.io.out_1 @[PE_8.scala 309:14]
    inst pe_4 of PE_4 @[PE_8.scala 312:20]
    pe_4.clock <= clock
    pe_4.reset <= reset
    pe_4.io.Xi_0 <= Xi_4_in_0 @[PE_8.scala 313:16]
    pe_4.io.Yi_0 <= Yi_4_in_0 @[PE_8.scala 314:16]
    pe_4.io.Xi_1 <= Xi_4_in_1 @[PE_8.scala 315:16]
    pe_4.io.Yi_1 <= Yi_4_in_1 @[PE_8.scala 316:16]
    pe_4.io.aggr_0 <= aggr_4_in_0 @[PE_8.scala 317:22]
    pe_4.io.aggr_1 <= aggr_4_in_1 @[PE_8.scala 318:22]
    pe_4.io.aggr_2 <= aggr_4_in_2 @[PE_8.scala 319:22]
    pe_4.io.aggr_3 <= aggr_4_in_3 @[PE_8.scala 320:22]
    pe_4.io.m_0_sel <= m_0_sel @[PE_8.scala 321:22]
    pe_4.io.m_1_sel <= m_1_sel @[PE_8.scala 322:22]
    pe_4.io.m_2_sel <= m_2_sel @[PE_8.scala 323:22]
    pe_4.io.m_3_sel <= m_3_sel @[PE_8.scala 324:22]
    pe_4.io.m_4_sel <= m_4_sel @[PE_8.scala 325:22]
    pe_4.io.m_5_sel <= m_5_sel @[PE_8.scala 326:22]
    pe_4.io.m_6_sel <= m_6_sel @[PE_8.scala 327:22]
    pe_4.io.m_7_sel <= m_7_sel @[PE_8.scala 328:22]
    pe_4.io.m_8_sel <= m_8_sel @[PE_8.scala 329:22]
    pe_4.io.m_9_sel <= m_9_sel @[PE_8.scala 330:22]
    pe_4.io.addsub_0_op <= addsub_0_op @[PE_8.scala 331:23]
    pe_4.io.addsub_1_op <= addsub_1_op @[PE_8.scala 332:23]
    pe_4.io.rounding <= rounding @[PE_8.scala 333:23]
    pe_4.io.tininess <= tininess @[PE_8.scala 334:23]
    pe_4.io.use_int <= use_int @[PE_8.scala 335:23]
    pe_4_out_0 <= pe_4.io.out_0 @[PE_8.scala 336:14]
    pe_4_out_1 <= pe_4.io.out_1 @[PE_8.scala 337:14]
    inst pe_5 of PE_5 @[PE_8.scala 340:20]
    pe_5.clock <= clock
    pe_5.reset <= reset
    pe_5.io.Xi_0 <= Xi_5_in_0 @[PE_8.scala 341:16]
    pe_5.io.Yi_0 <= Yi_5_in_0 @[PE_8.scala 342:16]
    pe_5.io.Xi_1 <= Xi_5_in_1 @[PE_8.scala 343:16]
    pe_5.io.Yi_1 <= Yi_5_in_1 @[PE_8.scala 344:16]
    pe_5.io.aggr_0 <= aggr_5_in_0 @[PE_8.scala 345:22]
    pe_5.io.aggr_1 <= aggr_5_in_1 @[PE_8.scala 346:22]
    pe_5.io.aggr_2 <= aggr_5_in_2 @[PE_8.scala 347:22]
    pe_5.io.aggr_3 <= aggr_5_in_3 @[PE_8.scala 348:22]
    pe_5.io.m_0_sel <= m_0_sel @[PE_8.scala 349:23]
    pe_5.io.m_1_sel <= m_1_sel @[PE_8.scala 350:23]
    pe_5.io.m_2_sel <= m_2_sel @[PE_8.scala 351:23]
    pe_5.io.m_3_sel <= m_3_sel @[PE_8.scala 352:23]
    pe_5.io.m_4_sel <= m_4_sel @[PE_8.scala 353:23]
    pe_5.io.m_5_sel <= m_5_sel @[PE_8.scala 354:23]
    pe_5.io.m_6_sel <= m_6_sel @[PE_8.scala 355:23]
    pe_5.io.m_7_sel <= m_7_sel @[PE_8.scala 356:23]
    pe_5.io.m_8_sel <= m_8_sel @[PE_8.scala 357:23]
    pe_5.io.m_9_sel <= m_9_sel @[PE_8.scala 358:23]
    pe_5.io.addsub_0_op <= addsub_0_op @[PE_8.scala 359:23]
    pe_5.io.addsub_1_op <= addsub_1_op @[PE_8.scala 360:23]
    pe_5.io.rounding <= rounding @[PE_8.scala 361:23]
    pe_5.io.tininess <= tininess @[PE_8.scala 362:23]
    pe_5.io.use_int <= use_int @[PE_8.scala 363:23]
    pe_5_out_0 <= pe_5.io.out_0 @[PE_8.scala 364:14]
    pe_5_out_1 <= pe_5.io.out_1 @[PE_8.scala 365:14]
    inst pe_6 of PE_6 @[PE_8.scala 368:20]
    pe_6.clock <= clock
    pe_6.reset <= reset
    pe_6.io.Xi_0 <= Xi_6_in_0 @[PE_8.scala 369:16]
    pe_6.io.Yi_0 <= Yi_6_in_0 @[PE_8.scala 370:16]
    pe_6.io.Xi_1 <= Xi_6_in_1 @[PE_8.scala 371:16]
    pe_6.io.Yi_1 <= Yi_6_in_1 @[PE_8.scala 372:16]
    pe_6.io.aggr_0 <= aggr_6_in_0 @[PE_8.scala 373:22]
    pe_6.io.aggr_1 <= aggr_6_in_1 @[PE_8.scala 374:22]
    pe_6.io.aggr_2 <= aggr_6_in_2 @[PE_8.scala 375:22]
    pe_6.io.aggr_3 <= aggr_6_in_3 @[PE_8.scala 376:22]
    pe_6.io.m_0_sel <= m_0_sel @[PE_8.scala 377:23]
    pe_6.io.m_1_sel <= m_1_sel @[PE_8.scala 378:23]
    pe_6.io.m_2_sel <= m_2_sel @[PE_8.scala 379:23]
    pe_6.io.m_3_sel <= m_3_sel @[PE_8.scala 380:23]
    pe_6.io.m_4_sel <= m_4_sel @[PE_8.scala 381:23]
    pe_6.io.m_5_sel <= m_5_sel @[PE_8.scala 382:23]
    pe_6.io.m_6_sel <= m_6_sel @[PE_8.scala 383:23]
    pe_6.io.m_7_sel <= m_7_sel @[PE_8.scala 384:23]
    pe_6.io.m_8_sel <= m_8_sel @[PE_8.scala 385:23]
    pe_6.io.m_9_sel <= m_9_sel @[PE_8.scala 386:23]
    pe_6.io.addsub_0_op <= addsub_0_op @[PE_8.scala 387:23]
    pe_6.io.addsub_1_op <= addsub_1_op @[PE_8.scala 388:23]
    pe_6.io.rounding <= rounding @[PE_8.scala 389:23]
    pe_6.io.tininess <= tininess @[PE_8.scala 390:23]
    pe_6.io.use_int <= use_int @[PE_8.scala 391:23]
    pe_6_out_0 <= pe_6.io.out_0 @[PE_8.scala 392:14]
    pe_6_out_1 <= pe_6.io.out_1 @[PE_8.scala 393:14]
    inst pe_7 of PE_7 @[PE_8.scala 395:20]
    pe_7.clock <= clock
    pe_7.reset <= reset
    pe_7.io.Xi_0 <= Xi_7_in_0 @[PE_8.scala 396:16]
    pe_7.io.Yi_0 <= Yi_7_in_0 @[PE_8.scala 397:16]
    pe_7.io.Xi_1 <= Xi_7_in_1 @[PE_8.scala 398:16]
    pe_7.io.Yi_1 <= Yi_7_in_1 @[PE_8.scala 399:16]
    pe_7.io.aggr_0 <= aggr_7_in_0 @[PE_8.scala 400:22]
    pe_7.io.aggr_1 <= aggr_7_in_1 @[PE_8.scala 401:22]
    pe_7.io.aggr_2 <= aggr_7_in_2 @[PE_8.scala 402:22]
    pe_7.io.aggr_3 <= aggr_7_in_3 @[PE_8.scala 403:22]
    pe_7.io.m_0_sel <= m_0_sel @[PE_8.scala 404:23]
    pe_7.io.m_1_sel <= m_1_sel @[PE_8.scala 405:23]
    pe_7.io.m_2_sel <= m_2_sel @[PE_8.scala 406:23]
    pe_7.io.m_3_sel <= m_3_sel @[PE_8.scala 407:23]
    pe_7.io.m_4_sel <= m_4_sel @[PE_8.scala 408:23]
    pe_7.io.m_5_sel <= m_5_sel @[PE_8.scala 409:23]
    pe_7.io.m_6_sel <= m_6_sel @[PE_8.scala 410:23]
    pe_7.io.m_7_sel <= m_7_sel @[PE_8.scala 411:23]
    pe_7.io.m_8_sel <= m_8_sel @[PE_8.scala 412:23]
    pe_7.io.m_9_sel <= m_9_sel @[PE_8.scala 413:23]
    pe_7.io.addsub_0_op <= addsub_0_op @[PE_8.scala 414:23]
    pe_7.io.addsub_1_op <= addsub_1_op @[PE_8.scala 415:23]
    pe_7.io.rounding <= rounding @[PE_8.scala 416:23]
    pe_7.io.tininess <= tininess @[PE_8.scala 417:23]
    pe_7.io.use_int <= use_int @[PE_8.scala 418:23]
    pe_7_out_0 <= pe_7.io.out_0 @[PE_8.scala 419:14]
    pe_7_out_1 <= pe_7.io.out_1 @[PE_8.scala 420:14]
    aggr_0_in_0 <= pe_0_out_0 @[PE_8.scala 426:13]
    aggr_0_in_1 <= pe_1_out_0 @[PE_8.scala 427:13]
    aggr_0_in_2 <= pe_0_out_1 @[PE_8.scala 428:13]
    aggr_0_in_3 <= pe_1_out_1 @[PE_8.scala 429:13]
    aggr_1_in_0 <= pe_2_out_0 @[PE_8.scala 432:13]
    aggr_1_in_1 <= pe_2_out_1 @[PE_8.scala 433:13]
    aggr_1_in_2 <= pe_3_out_0 @[PE_8.scala 434:13]
    aggr_1_in_3 <= pe_3_out_1 @[PE_8.scala 435:13]
    aggr_2_in_0 <= pe_4_out_0 @[PE_8.scala 437:13]
    aggr_2_in_1 <= pe_4_out_1 @[PE_8.scala 438:13]
    aggr_2_in_2 <= pe_5_out_0 @[PE_8.scala 439:13]
    aggr_2_in_3 <= pe_5_out_1 @[PE_8.scala 440:13]
    aggr_3_in_0 <= pe_6_out_0 @[PE_8.scala 442:13]
    aggr_3_in_1 <= pe_6_out_1 @[PE_8.scala 443:13]
    aggr_3_in_2 <= pe_7_out_0 @[PE_8.scala 444:13]
    aggr_3_in_3 <= pe_7_out_1 @[PE_8.scala 445:13]
    inst addsubModule_0 of AddSubPE_16 @[PE_8.scala 451:30]
    addsubModule_0.clock <= clock
    addsubModule_0.reset <= reset
    addsubModule_0.io.op <= UInt<1>("h0") @[PE_8.scala 452:32]
    addsubModule_0.io.rounding <= rounding @[PE_8.scala 453:32]
    addsubModule_0.io.tininess <= tininess @[PE_8.scala 454:32]
    addsubModule_0.io.use_int <= use_int @[PE_8.scala 455:32]
    addsubModule_0.io.in_0 <= addsum_in_0 @[PE_8.scala 456:32]
    addsubModule_0.io.in_1 <= addsum_in_1 @[PE_8.scala 457:32]
    out <= addsubModule_0.io.out @[PE_8.scala 458:8]
    reg value : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 60:40]
    reg value_1 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 60:40]
    reg value_2 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 60:40]
    reg value_3 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 60:40]
    reg value_4 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[Counter.scala 60:40]
    reg pe_step : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[PE_8.scala 482:25]
    node _T = eq(UInt<4>("h0"), pe_step) @[PE_8.scala 485:3]
    when _T : @[PE_8.scala 485:3]
      dbg_fsm <= UInt<4>("h9") @[PE_8.scala 487:17]
      pe_step <= UInt<4>("h1") @[PE_8.scala 488:17]
    else :
      node _T_1 = eq(UInt<4>("h1"), pe_step) @[PE_8.scala 485:3]
      when _T_1 : @[PE_8.scala 485:3]
        dbg_fsm <= UInt<4>("h1") @[PE_8.scala 492:17]
        node _T_2 = eq(UInt<2>("h0"), op_type) @[PE_8.scala 495:9]
        when _T_2 : @[PE_8.scala 495:9]
          dbg_opt <= UInt<4>("h1") @[PE_8.scala 500:21]
          addsub_0_op <= UInt<2>("h0") @[PE_8.scala 502:25]
          addsub_1_op <= UInt<2>("h0") @[PE_8.scala 503:25]
          m_0_sel <= UInt<2>("h1") @[PE_8.scala 505:21]
          m_1_sel <= UInt<2>("h1") @[PE_8.scala 506:21]
          m_2_sel <= UInt<2>("h1") @[PE_8.scala 507:21]
          m_3_sel <= UInt<2>("h1") @[PE_8.scala 508:21]
          m_4_sel <= UInt<2>("h0") @[PE_8.scala 509:21]
          m_5_sel <= UInt<2>("h0") @[PE_8.scala 510:21]
          m_6_sel <= UInt<2>("h0") @[PE_8.scala 511:21]
          m_7_sel <= UInt<2>("h0") @[PE_8.scala 512:21]
          m_8_sel <= UInt<2>("h1") @[PE_8.scala 515:21]
          m_9_sel <= UInt<2>("h1") @[PE_8.scala 516:21]
          pe_step <= UInt<4>("h2") @[PE_8.scala 518:21]
        else :
          node _T_3 = eq(UInt<2>("h1"), op_type) @[PE_8.scala 495:9]
          when _T_3 : @[PE_8.scala 495:9]
            dbg_opt <= UInt<4>("h2") @[PE_8.scala 524:21]
            addsub_0_op <= UInt<2>("h0") @[PE_8.scala 526:25]
            addsub_1_op <= UInt<2>("h0") @[PE_8.scala 527:25]
            m_4_sel <= UInt<2>("h0") @[PE_8.scala 533:21]
            m_5_sel <= UInt<2>("h0") @[PE_8.scala 534:21]
            m_6_sel <= UInt<2>("h0") @[PE_8.scala 535:21]
            m_7_sel <= UInt<2>("h0") @[PE_8.scala 536:21]
            m_8_sel <= UInt<2>("h0") @[PE_8.scala 539:21]
            m_9_sel <= UInt<2>("h0") @[PE_8.scala 540:21]
            pe_step <= UInt<4>("h3") @[PE_8.scala 542:21]
          else :
            node _T_4 = eq(UInt<2>("h2"), op_type) @[PE_8.scala 495:9]
            when _T_4 : @[PE_8.scala 495:9]
              dbg_opt <= UInt<4>("h3") @[PE_8.scala 548:21]
              m_0_sel <= UInt<2>("h0") @[PE_8.scala 550:21]
              m_1_sel <= UInt<2>("h0") @[PE_8.scala 551:21]
              m_2_sel <= UInt<2>("h0") @[PE_8.scala 552:21]
              m_3_sel <= UInt<2>("h0") @[PE_8.scala 553:21]
              m_4_sel <= UInt<2>("h3") @[PE_8.scala 554:21]
              m_5_sel <= UInt<2>("h3") @[PE_8.scala 555:21]
              m_6_sel <= UInt<2>("h3") @[PE_8.scala 556:21]
              m_7_sel <= UInt<2>("h3") @[PE_8.scala 557:21]
              m_8_sel <= UInt<2>("h1") @[PE_8.scala 560:21]
              m_9_sel <= UInt<2>("h1") @[PE_8.scala 561:21]
              pe_step <= UInt<4>("h4") @[PE_8.scala 563:21]
            else :
              node _T_5 = eq(UInt<2>("h3"), op_type) @[PE_8.scala 495:9]
              when _T_5 : @[PE_8.scala 495:9]
                dbg_opt <= UInt<4>("h4") @[PE_8.scala 569:21]
                m_0_sel <= UInt<2>("h0") @[PE_8.scala 571:21]
                m_1_sel <= UInt<2>("h0") @[PE_8.scala 572:21]
                m_2_sel <= UInt<2>("h0") @[PE_8.scala 573:21]
                m_3_sel <= UInt<2>("h0") @[PE_8.scala 574:21]
                m_4_sel <= UInt<2>("h1") @[PE_8.scala 575:21]
                m_5_sel <= UInt<2>("h1") @[PE_8.scala 576:21]
                m_6_sel <= UInt<2>("h3") @[PE_8.scala 577:21]
                m_7_sel <= UInt<2>("h3") @[PE_8.scala 578:21]
                m_8_sel <= UInt<2>("h0") @[PE_8.scala 581:21]
                m_9_sel <= UInt<2>("h0") @[PE_8.scala 582:21]
                pe_step <= UInt<4>("h5") @[PE_8.scala 584:21]
      else :
        node _T_6 = eq(UInt<4>("h2"), pe_step) @[PE_8.scala 485:3]
        when _T_6 : @[PE_8.scala 485:3]
          dbg_fsm <= UInt<4>("h3") @[PE_8.scala 589:15]
          node wrap = eq(value, UInt<4>("he")) @[Counter.scala 72:24]
          node _value_T = add(value, UInt<1>("h1")) @[Counter.scala 76:24]
          node _value_T_1 = tail(_value_T, 1) @[Counter.scala 76:24]
          value <= _value_T_1 @[Counter.scala 76:15]
          when wrap : @[Counter.scala 86:20]
            value <= UInt<1>("h0") @[Counter.scala 86:28]
          node _T_7 = eq(value, UInt<4>("he")) @[PE_8.scala 592:30]
          when _T_7 : @[PE_8.scala 592:53]
            pe_step <= UInt<4>("h6") @[PE_8.scala 593:17]
            value <= UInt<1>("h0") @[Counter.scala 97:11]
        else :
          node _T_8 = eq(UInt<4>("h3"), pe_step) @[PE_8.scala 485:3]
          when _T_8 : @[PE_8.scala 485:3]
            dbg_fsm <= UInt<4>("h3") @[PE_8.scala 599:15]
            node wrap_1 = eq(value_1, UInt<4>("h9")) @[Counter.scala 72:24]
            node _value_T_2 = add(value_1, UInt<1>("h1")) @[Counter.scala 76:24]
            node _value_T_3 = tail(_value_T_2, 1) @[Counter.scala 76:24]
            value_1 <= _value_T_3 @[Counter.scala 76:15]
            when wrap_1 : @[Counter.scala 86:20]
              value_1 <= UInt<1>("h0") @[Counter.scala 86:28]
            node _T_9 = eq(value_1, UInt<4>("h9")) @[PE_8.scala 602:30]
            when _T_9 : @[PE_8.scala 602:53]
              pe_step <= UInt<4>("h6") @[PE_8.scala 603:17]
              value_1 <= UInt<1>("h0") @[Counter.scala 97:11]
          else :
            node _T_10 = eq(UInt<4>("h4"), pe_step) @[PE_8.scala 485:3]
            when _T_10 : @[PE_8.scala 485:3]
              dbg_fsm <= UInt<4>("h3") @[PE_8.scala 609:15]
              node wrap_2 = eq(value_2, UInt<4>("h9")) @[Counter.scala 72:24]
              node _value_T_4 = add(value_2, UInt<1>("h1")) @[Counter.scala 76:24]
              node _value_T_5 = tail(_value_T_4, 1) @[Counter.scala 76:24]
              value_2 <= _value_T_5 @[Counter.scala 76:15]
              when wrap_2 : @[Counter.scala 86:20]
                value_2 <= UInt<1>("h0") @[Counter.scala 86:28]
              node _T_11 = eq(value_2, UInt<4>("h9")) @[PE_8.scala 612:31]
              when _T_11 : @[PE_8.scala 612:55]
                pe_step <= UInt<4>("h6") @[PE_8.scala 613:17]
                value_2 <= UInt<1>("h0") @[Counter.scala 97:11]
            else :
              node _T_12 = eq(UInt<4>("h5"), pe_step) @[PE_8.scala 485:3]
              when _T_12 : @[PE_8.scala 485:3]
                dbg_fsm <= UInt<4>("h3") @[PE_8.scala 619:15]
                node wrap_3 = eq(value_3, UInt<4>("he")) @[Counter.scala 72:24]
                node _value_T_6 = add(value_3, UInt<1>("h1")) @[Counter.scala 76:24]
                node _value_T_7 = tail(_value_T_6, 1) @[Counter.scala 76:24]
                value_3 <= _value_T_7 @[Counter.scala 76:15]
                when wrap_3 : @[Counter.scala 86:20]
                  value_3 <= UInt<1>("h0") @[Counter.scala 86:28]
                node _T_13 = eq(value_3, UInt<4>("he")) @[PE_8.scala 622:31]
                when _T_13 : @[PE_8.scala 622:55]
                  pe_step <= UInt<4>("h6") @[PE_8.scala 623:17]
                  value_3 <= UInt<1>("h0") @[Counter.scala 97:11]
              else :
                node _T_14 = eq(UInt<4>("h6"), pe_step) @[PE_8.scala 485:3]
                when _T_14 : @[PE_8.scala 485:3]
                  dbg_fsm <= UInt<4>("h5") @[PE_8.scala 629:15]
                  m_4_sel <= UInt<2>("h2") @[PE_8.scala 631:15]
                  m_5_sel <= UInt<2>("h2") @[PE_8.scala 632:15]
                  m_6_sel <= UInt<2>("h2") @[PE_8.scala 633:15]
                  m_7_sel <= UInt<2>("h2") @[PE_8.scala 634:15]
                  m_8_sel <= UInt<2>("h0") @[PE_8.scala 636:15]
                  m_9_sel <= UInt<2>("h0") @[PE_8.scala 637:15]
                  pe_step <= UInt<4>("h7") @[PE_8.scala 639:15]
                else :
                  node _T_15 = eq(UInt<4>("h7"), pe_step) @[PE_8.scala 485:3]
                  when _T_15 : @[PE_8.scala 485:3]
                    dbg_fsm <= UInt<4>("h6") @[PE_8.scala 642:15]
                    node wrap_4 = eq(value_4, UInt<6>("h31")) @[Counter.scala 72:24]
                    node _value_T_8 = add(value_4, UInt<1>("h1")) @[Counter.scala 76:24]
                    node _value_T_9 = tail(_value_T_8, 1) @[Counter.scala 76:24]
                    value_4 <= _value_T_9 @[Counter.scala 76:15]
                    when wrap_4 : @[Counter.scala 86:20]
                      value_4 <= UInt<1>("h0") @[Counter.scala 86:28]
                    node _T_16 = eq(value_4, UInt<6>("h31")) @[PE_8.scala 645:35]
                    when _T_16 : @[PE_8.scala 645:63]
                      addsum_in_0 <= pe_0_out_0 @[PE_8.scala 647:21]
                      addsum_in_1 <= pe_0_out_1 @[PE_8.scala 648:21]
                      value_4 <= UInt<1>("h0") @[Counter.scala 97:11]
                      pe_step <= UInt<4>("h8") @[PE_8.scala 651:17]
                  else :
                    node _T_17 = eq(UInt<4>("h8"), pe_step) @[PE_8.scala 485:3]
                    when _T_17 : @[PE_8.scala 485:3]
                      dbg_fsm <= UInt<4>("h7") @[PE_8.scala 655:15]
                      pe_step <= UInt<4>("h1") @[PE_8.scala 656:15]
    io.out <= out @[PE_8.scala 661:10]

