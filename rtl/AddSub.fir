;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit AddSub : 
  module AddRawFN : 
    output io : {flip subOp : UInt<1>, flip a : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h02")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 4, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h01"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h00")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h01f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h00")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h00")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h01")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h00")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h00")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h00")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h00")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h00")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h00")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h00")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[13] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_7_T = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_7_T_1 = orr(_close_reduced2SigSum_reducedVec_7_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[7] <= _close_reduced2SigSum_reducedVec_7_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_8_T = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_8_T_1 = orr(_close_reduced2SigSum_reducedVec_8_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[8] <= _close_reduced2SigSum_reducedVec_8_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_9_T = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_9_T_1 = orr(_close_reduced2SigSum_reducedVec_9_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[9] <= _close_reduced2SigSum_reducedVec_9_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_10_T = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_10_T_1 = orr(_close_reduced2SigSum_reducedVec_10_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[10] <= _close_reduced2SigSum_reducedVec_10_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_11_T = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_11_T_1 = orr(_close_reduced2SigSum_reducedVec_11_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[11] <= _close_reduced2SigSum_reducedVec_11_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_12_T = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_12_T_1 = orr(_close_reduced2SigSum_reducedVec_12_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[12] <= _close_reduced2SigSum_reducedVec_12_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_lo = cat(close_reduced2SigSum_lo_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi_hi = cat(close_reduced2SigSum_reducedVec[5], close_reduced2SigSum_reducedVec[4]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_lo_hi_hi, close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_lo_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo_hi = cat(close_reduced2SigSum_reducedVec[8], close_reduced2SigSum_reducedVec[7]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_hi_lo_hi, close_reduced2SigSum_reducedVec[6]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_lo = cat(close_reduced2SigSum_reducedVec[10], close_reduced2SigSum_reducedVec[9]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi_hi = cat(close_reduced2SigSum_reducedVec[12], close_reduced2SigSum_reducedVec[11]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_hi_hi_hi, close_reduced2SigSum_hi_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_8 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_9 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_10 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_11 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_12 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_13 = mux(_close_normDistReduced2_T_1, UInt<4>("h0b"), UInt<4>("h0c")) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_14 = mux(_close_normDistReduced2_T_2, UInt<4>("h0a"), _close_normDistReduced2_T_13) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_15 = mux(_close_normDistReduced2_T_3, UInt<4>("h09"), _close_normDistReduced2_T_14) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_16 = mux(_close_normDistReduced2_T_4, UInt<4>("h08"), _close_normDistReduced2_T_15) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_17 = mux(_close_normDistReduced2_T_5, UInt<3>("h07"), _close_normDistReduced2_T_16) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_18 = mux(_close_normDistReduced2_T_6, UInt<3>("h06"), _close_normDistReduced2_T_17) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_19 = mux(_close_normDistReduced2_T_7, UInt<3>("h05"), _close_normDistReduced2_T_18) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_20 = mux(_close_normDistReduced2_T_8, UInt<3>("h04"), _close_normDistReduced2_T_19) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_21 = mux(_close_normDistReduced2_T_9, UInt<2>("h03"), _close_normDistReduced2_T_20) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_22 = mux(_close_normDistReduced2_T_10, UInt<2>("h02"), _close_normDistReduced2_T_21) @[Mux.scala 47:69]
    node _close_normDistReduced2_T_23 = mux(_close_normDistReduced2_T_11, UInt<1>("h01"), _close_normDistReduced2_T_22) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_12, UInt<1>("h00"), _close_normDistReduced2_T_23) @[Mux.scala 47:69]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 4, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 26, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h00")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 23, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 23, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[7] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 15, 12) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_4_T = bits(_far_reduced4SigSmaller_T, 19, 16) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_4_T_1 = orr(_far_reduced4SigSmaller_reducedVec_4_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[4] <= _far_reduced4SigSmaller_reducedVec_4_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_5_T = bits(_far_reduced4SigSmaller_T, 23, 20) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_5_T_1 = orr(_far_reduced4SigSmaller_reducedVec_5_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[5] <= _far_reduced4SigSmaller_reducedVec_5_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_6_T = bits(_far_reduced4SigSmaller_T, 25, 24) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_6_T_1 = orr(_far_reduced4SigSmaller_reducedVec_6_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[6] <= _far_reduced4SigSmaller_reducedVec_6_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo_hi = cat(far_reduced4SigSmaller_reducedVec[2], far_reduced4SigSmaller_reducedVec[1]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_lo_hi, far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_lo = cat(far_reduced4SigSmaller_reducedVec[4], far_reduced4SigSmaller_reducedVec[3]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi_hi = cat(far_reduced4SigSmaller_reducedVec[6], far_reduced4SigSmaller_reducedVec[5]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_hi_hi, far_reduced4SigSmaller_hi_lo) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<9>("h0100")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 7, 1) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 3, 0) @[Bitwise.scala 109:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 1, 0) @[Bitwise.scala 109:18]
    node far_roundExtraMask_hi = bits(_far_roundExtraMask_T_3, 0, 0) @[Bitwise.scala 109:18]
    node far_roundExtraMask_lo = bits(_far_roundExtraMask_T_3, 1, 1) @[Bitwise.scala 109:44]
    node far_roundExtraMask_hi_1 = cat(far_roundExtraMask_hi, far_roundExtraMask_lo) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 3, 2) @[Bitwise.scala 109:44]
    node far_roundExtraMask_hi_2 = bits(_far_roundExtraMask_T_4, 0, 0) @[Bitwise.scala 109:18]
    node far_roundExtraMask_lo_1 = bits(_far_roundExtraMask_T_4, 1, 1) @[Bitwise.scala 109:44]
    node far_roundExtraMask_lo_2 = cat(far_roundExtraMask_hi_2, far_roundExtraMask_lo_1) @[Cat.scala 30:58]
    node far_roundExtraMask_hi_3 = cat(far_roundExtraMask_hi_1, far_roundExtraMask_lo_2) @[Cat.scala 30:58]
    node _far_roundExtraMask_T_5 = bits(_far_roundExtraMask_T_1, 6, 4) @[Bitwise.scala 109:44]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_5, 1, 0) @[Bitwise.scala 109:18]
    node far_roundExtraMask_hi_4 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 109:18]
    node far_roundExtraMask_lo_3 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 109:44]
    node far_roundExtraMask_hi_5 = cat(far_roundExtraMask_hi_4, far_roundExtraMask_lo_3) @[Cat.scala 30:58]
    node far_roundExtraMask_lo_4 = bits(_far_roundExtraMask_T_5, 2, 2) @[Bitwise.scala 109:44]
    node far_roundExtraMask_lo_5 = cat(far_roundExtraMask_hi_5, far_roundExtraMask_lo_4) @[Cat.scala 30:58]
    node far_roundExtraMask = cat(far_roundExtraMask_hi_3, far_roundExtraMask_lo_5) @[Cat.scala 30:58]
    node far_alignedSigSmaller_hi = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_1 = orr(_far_alignedSigSmaller_T) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_2 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_3 = orr(_far_alignedSigSmaller_T_2) @[AddRecFN.scala 95:98]
    node far_alignedSigSmaller_lo = or(_far_alignedSigSmaller_T_1, _far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(far_alignedSigSmaller_hi, far_alignedSigSmaller_lo) @[Cat.scala 30:58]
    node far_subMags = eq(eqSigns, UInt<1>("h00")) @[AddRecFN.scala 96:23]
    node far_negAlignedSigSmaller_lo = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T = cat(UInt<1>("h01"), far_negAlignedSigSmaller_lo) @[Cat.scala 30:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 26, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h00")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h00")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h00")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h00")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h00")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h00")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h00")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h00"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h00")) @[common.scala 84:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 84:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 22, 22) @[common.scala 84:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h00")) @[common.scala 84:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 84:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]
    
  module RoundAnyRawFNToRecFN : 
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h010000000000000000")), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_4 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _roundMask_T_5 = xor(UInt<16>("h0ffff"), _roundMask_T_4) @[Bitwise.scala 102:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 103:77]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 102:47]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 102:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 103:77]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 102:47]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 102:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 103:77]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 102:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 102:47]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 102:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 103:77]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 103:75]
    node roundMask_hi = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_42 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_43 = bits(_roundMask_T_42, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_44 = bits(_roundMask_T_43, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_1 = bits(_roundMask_T_44, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo = bits(_roundMask_T_44, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_2 = cat(roundMask_hi_1, roundMask_lo) @[Cat.scala 30:58]
    node _roundMask_T_45 = bits(_roundMask_T_43, 3, 2) @[Bitwise.scala 109:44]
    node roundMask_hi_3 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_1 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_lo_2 = cat(roundMask_hi_3, roundMask_lo_1) @[Cat.scala 30:58]
    node roundMask_hi_4 = cat(roundMask_hi_2, roundMask_lo_2) @[Cat.scala 30:58]
    node _roundMask_T_46 = bits(_roundMask_T_42, 5, 4) @[Bitwise.scala 109:44]
    node roundMask_hi_5 = bits(_roundMask_T_46, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_3 = bits(_roundMask_T_46, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_lo_4 = cat(roundMask_hi_5, roundMask_lo_3) @[Cat.scala 30:58]
    node roundMask_lo_5 = cat(roundMask_hi_4, roundMask_lo_4) @[Cat.scala 30:58]
    node _roundMask_T_47 = cat(roundMask_hi, roundMask_lo_5) @[Cat.scala 30:58]
    node _roundMask_T_48 = not(_roundMask_T_47) @[primitives.scala 74:36]
    node _roundMask_T_49 = mux(roundMask_msb_2, UInt<1>("h00"), _roundMask_T_48) @[primitives.scala 74:21]
    node roundMask_hi_6 = not(_roundMask_T_49) @[primitives.scala 74:17]
    node _roundMask_T_50 = cat(roundMask_hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h010000000000000000")), roundMask_lsbs_3) @[primitives.scala 77:58]
    node _roundMask_T_51 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_52 = bits(_roundMask_T_51, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_7 = bits(_roundMask_T_52, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_6 = bits(_roundMask_T_52, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_8 = cat(roundMask_hi_7, roundMask_lo_6) @[Cat.scala 30:58]
    node roundMask_lo_7 = bits(_roundMask_T_51, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_53 = cat(roundMask_hi_8, roundMask_lo_7) @[Cat.scala 30:58]
    node _roundMask_T_54 = mux(roundMask_msb_3, _roundMask_T_53, UInt<1>("h00")) @[primitives.scala 61:24]
    node _roundMask_T_55 = mux(roundMask_msb_1, _roundMask_T_50, _roundMask_T_54) @[primitives.scala 66:24]
    node _roundMask_T_56 = mux(roundMask_msb, _roundMask_T_55, UInt<1>("h00")) @[primitives.scala 61:24]
    node roundMask_hi_9 = or(_roundMask_T_56, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(roundMask_hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node shiftedRoundMask_lo = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h00"), shiftedRoundMask_lo) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN : 
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module AddRecFN : 
    output io : {flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    inst addRawFN of AddRawFN @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node addRawFN_io_a_out_sig_hi_lo = eq(addRawFN_io_a_isZero, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node addRawFN_io_a_out_sig_lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h00"), addRawFN_io_a_out_sig_hi_lo) @[Cat.scala 30:58]
    node _addRawFN_io_a_out_sig_T = cat(addRawFN_io_a_out_sig_hi, addRawFN_io_a_out_sig_lo) @[Cat.scala 30:58]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node addRawFN_io_b_out_sig_hi_lo = eq(addRawFN_io_b_isZero, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node addRawFN_io_b_out_sig_lo = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h00"), addRawFN_io_b_out_sig_hi_lo) @[Cat.scala 30:58]
    node _addRawFN_io_b_out_sig_T = cat(addRawFN_io_b_out_sig_hi, addRawFN_io_b_out_sig_lo) @[Cat.scala 30:58]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]
    
  module RoundAnyRawFNToRecFN_1 : 
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<8>, sig : UInt<33>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node _sAdjustedExp_T = add(io.in.sExp, asSInt(UInt<9>("h0c0"))) @[RoundAnyRawFNToRecFN.scala 102:25]
    node _sAdjustedExp_T_1 = bits(_sAdjustedExp_T, 8, 0) @[RoundAnyRawFNToRecFN.scala 104:14]
    node sAdjustedExp = cvt(_sAdjustedExp_T_1) @[RoundAnyRawFNToRecFN.scala 104:31]
    node adjustedSig_hi = bits(io.in.sig, 32, 7) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _adjustedSig_T = bits(io.in.sig, 6, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node adjustedSig_lo = orr(_adjustedSig_T) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(adjustedSig_hi, adjustedSig_lo) @[Cat.scala 30:58]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node roundMask_hi = cat(UInt<24>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node roundMask = cat(roundMask_hi, UInt<2>("h03")) @[Cat.scala 30:58]
    node shiftedRoundMask_lo = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h00"), shiftedRoundMask_lo) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(sAdjustedExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(UInt<1>("h00"), _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    common_overflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 191:25]
    common_totalUnderflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(UInt<1>("h00"), _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(UInt<1>("h00"), _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(UInt<1>("h00"), _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    common_underflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module INToRecFN : 
    output io : {flip signedIn : UInt<1>, flip in : UInt<32>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _intAsRawFloat_sign_T = bits(io.in, 31, 31) @[rawFloatFromIN.scala 50:34]
    node intAsRawFloat_sign = and(io.signedIn, _intAsRawFloat_sign_T) @[rawFloatFromIN.scala 50:29]
    node _intAsRawFloat_absIn_T = sub(UInt<1>("h00"), io.in) @[rawFloatFromIN.scala 51:31]
    node _intAsRawFloat_absIn_T_1 = tail(_intAsRawFloat_absIn_T, 1) @[rawFloatFromIN.scala 51:31]
    node intAsRawFloat_extAbsIn_lo = mux(intAsRawFloat_sign, _intAsRawFloat_absIn_T_1, io.in) @[rawFloatFromIN.scala 51:24]
    node _intAsRawFloat_extAbsIn_T = cat(UInt<32>("h00"), intAsRawFloat_extAbsIn_lo) @[Cat.scala 30:58]
    node intAsRawFloat_extAbsIn = bits(_intAsRawFloat_extAbsIn_T, 31, 0) @[rawFloatFromIN.scala 52:56]
    node _intAsRawFloat_adjustedNormDist_T = bits(intAsRawFloat_extAbsIn, 0, 0) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_1 = bits(intAsRawFloat_extAbsIn, 1, 1) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_2 = bits(intAsRawFloat_extAbsIn, 2, 2) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_3 = bits(intAsRawFloat_extAbsIn, 3, 3) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_4 = bits(intAsRawFloat_extAbsIn, 4, 4) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_5 = bits(intAsRawFloat_extAbsIn, 5, 5) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_6 = bits(intAsRawFloat_extAbsIn, 6, 6) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_7 = bits(intAsRawFloat_extAbsIn, 7, 7) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_8 = bits(intAsRawFloat_extAbsIn, 8, 8) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_9 = bits(intAsRawFloat_extAbsIn, 9, 9) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_10 = bits(intAsRawFloat_extAbsIn, 10, 10) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_11 = bits(intAsRawFloat_extAbsIn, 11, 11) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_12 = bits(intAsRawFloat_extAbsIn, 12, 12) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_13 = bits(intAsRawFloat_extAbsIn, 13, 13) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_14 = bits(intAsRawFloat_extAbsIn, 14, 14) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_15 = bits(intAsRawFloat_extAbsIn, 15, 15) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_16 = bits(intAsRawFloat_extAbsIn, 16, 16) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_17 = bits(intAsRawFloat_extAbsIn, 17, 17) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_18 = bits(intAsRawFloat_extAbsIn, 18, 18) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_19 = bits(intAsRawFloat_extAbsIn, 19, 19) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_20 = bits(intAsRawFloat_extAbsIn, 20, 20) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_21 = bits(intAsRawFloat_extAbsIn, 21, 21) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_22 = bits(intAsRawFloat_extAbsIn, 22, 22) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_23 = bits(intAsRawFloat_extAbsIn, 23, 23) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_24 = bits(intAsRawFloat_extAbsIn, 24, 24) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_25 = bits(intAsRawFloat_extAbsIn, 25, 25) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_26 = bits(intAsRawFloat_extAbsIn, 26, 26) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_27 = bits(intAsRawFloat_extAbsIn, 27, 27) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_28 = bits(intAsRawFloat_extAbsIn, 28, 28) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_29 = bits(intAsRawFloat_extAbsIn, 29, 29) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_30 = bits(intAsRawFloat_extAbsIn, 30, 30) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_31 = bits(intAsRawFloat_extAbsIn, 31, 31) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_32 = mux(_intAsRawFloat_adjustedNormDist_T_1, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_33 = mux(_intAsRawFloat_adjustedNormDist_T_2, UInt<5>("h01d"), _intAsRawFloat_adjustedNormDist_T_32) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_34 = mux(_intAsRawFloat_adjustedNormDist_T_3, UInt<5>("h01c"), _intAsRawFloat_adjustedNormDist_T_33) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_35 = mux(_intAsRawFloat_adjustedNormDist_T_4, UInt<5>("h01b"), _intAsRawFloat_adjustedNormDist_T_34) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_36 = mux(_intAsRawFloat_adjustedNormDist_T_5, UInt<5>("h01a"), _intAsRawFloat_adjustedNormDist_T_35) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_37 = mux(_intAsRawFloat_adjustedNormDist_T_6, UInt<5>("h019"), _intAsRawFloat_adjustedNormDist_T_36) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_38 = mux(_intAsRawFloat_adjustedNormDist_T_7, UInt<5>("h018"), _intAsRawFloat_adjustedNormDist_T_37) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_39 = mux(_intAsRawFloat_adjustedNormDist_T_8, UInt<5>("h017"), _intAsRawFloat_adjustedNormDist_T_38) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_40 = mux(_intAsRawFloat_adjustedNormDist_T_9, UInt<5>("h016"), _intAsRawFloat_adjustedNormDist_T_39) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_41 = mux(_intAsRawFloat_adjustedNormDist_T_10, UInt<5>("h015"), _intAsRawFloat_adjustedNormDist_T_40) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_42 = mux(_intAsRawFloat_adjustedNormDist_T_11, UInt<5>("h014"), _intAsRawFloat_adjustedNormDist_T_41) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_43 = mux(_intAsRawFloat_adjustedNormDist_T_12, UInt<5>("h013"), _intAsRawFloat_adjustedNormDist_T_42) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_44 = mux(_intAsRawFloat_adjustedNormDist_T_13, UInt<5>("h012"), _intAsRawFloat_adjustedNormDist_T_43) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_45 = mux(_intAsRawFloat_adjustedNormDist_T_14, UInt<5>("h011"), _intAsRawFloat_adjustedNormDist_T_44) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_46 = mux(_intAsRawFloat_adjustedNormDist_T_15, UInt<5>("h010"), _intAsRawFloat_adjustedNormDist_T_45) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_47 = mux(_intAsRawFloat_adjustedNormDist_T_16, UInt<4>("h0f"), _intAsRawFloat_adjustedNormDist_T_46) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_48 = mux(_intAsRawFloat_adjustedNormDist_T_17, UInt<4>("h0e"), _intAsRawFloat_adjustedNormDist_T_47) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_49 = mux(_intAsRawFloat_adjustedNormDist_T_18, UInt<4>("h0d"), _intAsRawFloat_adjustedNormDist_T_48) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_50 = mux(_intAsRawFloat_adjustedNormDist_T_19, UInt<4>("h0c"), _intAsRawFloat_adjustedNormDist_T_49) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_51 = mux(_intAsRawFloat_adjustedNormDist_T_20, UInt<4>("h0b"), _intAsRawFloat_adjustedNormDist_T_50) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_52 = mux(_intAsRawFloat_adjustedNormDist_T_21, UInt<4>("h0a"), _intAsRawFloat_adjustedNormDist_T_51) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_53 = mux(_intAsRawFloat_adjustedNormDist_T_22, UInt<4>("h09"), _intAsRawFloat_adjustedNormDist_T_52) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_54 = mux(_intAsRawFloat_adjustedNormDist_T_23, UInt<4>("h08"), _intAsRawFloat_adjustedNormDist_T_53) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_55 = mux(_intAsRawFloat_adjustedNormDist_T_24, UInt<3>("h07"), _intAsRawFloat_adjustedNormDist_T_54) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_56 = mux(_intAsRawFloat_adjustedNormDist_T_25, UInt<3>("h06"), _intAsRawFloat_adjustedNormDist_T_55) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_57 = mux(_intAsRawFloat_adjustedNormDist_T_26, UInt<3>("h05"), _intAsRawFloat_adjustedNormDist_T_56) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_58 = mux(_intAsRawFloat_adjustedNormDist_T_27, UInt<3>("h04"), _intAsRawFloat_adjustedNormDist_T_57) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_59 = mux(_intAsRawFloat_adjustedNormDist_T_28, UInt<2>("h03"), _intAsRawFloat_adjustedNormDist_T_58) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_60 = mux(_intAsRawFloat_adjustedNormDist_T_29, UInt<2>("h02"), _intAsRawFloat_adjustedNormDist_T_59) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_61 = mux(_intAsRawFloat_adjustedNormDist_T_30, UInt<1>("h01"), _intAsRawFloat_adjustedNormDist_T_60) @[Mux.scala 47:69]
    node intAsRawFloat_adjustedNormDist = mux(_intAsRawFloat_adjustedNormDist_T_31, UInt<1>("h00"), _intAsRawFloat_adjustedNormDist_T_61) @[Mux.scala 47:69]
    node _intAsRawFloat_sig_T = dshl(intAsRawFloat_extAbsIn, intAsRawFloat_adjustedNormDist) @[rawFloatFromIN.scala 55:22]
    node intAsRawFloat_sig = bits(_intAsRawFloat_sig_T, 31, 0) @[rawFloatFromIN.scala 55:41]
    wire intAsRawFloat : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<8>, sig : UInt<33>} @[rawFloatFromIN.scala 58:23]
    intAsRawFloat is invalid @[rawFloatFromIN.scala 58:23]
    intAsRawFloat.isNaN <= UInt<1>("h00") @[rawFloatFromIN.scala 59:20]
    intAsRawFloat.isInf <= UInt<1>("h00") @[rawFloatFromIN.scala 60:20]
    node _intAsRawFloat_out_isZero_T = bits(intAsRawFloat_sig, 31, 31) @[rawFloatFromIN.scala 61:28]
    node _intAsRawFloat_out_isZero_T_1 = eq(_intAsRawFloat_out_isZero_T, UInt<1>("h00")) @[rawFloatFromIN.scala 61:23]
    intAsRawFloat.isZero <= _intAsRawFloat_out_isZero_T_1 @[rawFloatFromIN.scala 61:20]
    intAsRawFloat.sign <= intAsRawFloat_sign @[rawFloatFromIN.scala 62:20]
    node _intAsRawFloat_out_sExp_T = bits(intAsRawFloat_adjustedNormDist, 4, 0) @[rawFloatFromIN.scala 63:56]
    node intAsRawFloat_out_sExp_lo = not(_intAsRawFloat_out_sExp_T) @[rawFloatFromIN.scala 63:39]
    node _intAsRawFloat_out_sExp_T_1 = cat(UInt<2>("h02"), intAsRawFloat_out_sExp_lo) @[Cat.scala 30:58]
    node _intAsRawFloat_out_sExp_T_2 = cvt(_intAsRawFloat_out_sExp_T_1) @[rawFloatFromIN.scala 63:75]
    intAsRawFloat.sExp <= _intAsRawFloat_out_sExp_T_2 @[rawFloatFromIN.scala 63:20]
    intAsRawFloat.sig <= intAsRawFloat_sig @[rawFloatFromIN.scala 64:20]
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_1 @[INToRecFN.scala 59:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= UInt<1>("h00") @[INToRecFN.scala 67:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[INToRecFN.scala 68:44]
    roundAnyRawFNToRecFN.io.in <- intAsRawFloat @[INToRecFN.scala 69:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[INToRecFN.scala 70:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[INToRecFN.scala 71:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[INToRecFN.scala 72:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[INToRecFN.scala 73:23]
    
  module RoundAnyRawFNToRecFN_2 : 
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<8>, sig : UInt<33>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node _sAdjustedExp_T = add(io.in.sExp, asSInt(UInt<9>("h0c0"))) @[RoundAnyRawFNToRecFN.scala 102:25]
    node _sAdjustedExp_T_1 = bits(_sAdjustedExp_T, 8, 0) @[RoundAnyRawFNToRecFN.scala 104:14]
    node sAdjustedExp = cvt(_sAdjustedExp_T_1) @[RoundAnyRawFNToRecFN.scala 104:31]
    node adjustedSig_hi = bits(io.in.sig, 32, 7) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _adjustedSig_T = bits(io.in.sig, 6, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node adjustedSig_lo = orr(_adjustedSig_T) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(adjustedSig_hi, adjustedSig_lo) @[Cat.scala 30:58]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node roundMask_hi = cat(UInt<24>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node roundMask = cat(roundMask_hi, UInt<2>("h03")) @[Cat.scala 30:58]
    node shiftedRoundMask_lo = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h00"), shiftedRoundMask_lo) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(sAdjustedExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(UInt<1>("h00"), _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    common_overflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 191:25]
    common_totalUnderflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(UInt<1>("h00"), _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(UInt<1>("h00"), _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(UInt<1>("h00"), _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    common_underflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module INToRecFN_1 : 
    output io : {flip signedIn : UInt<1>, flip in : UInt<32>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _intAsRawFloat_sign_T = bits(io.in, 31, 31) @[rawFloatFromIN.scala 50:34]
    node intAsRawFloat_sign = and(io.signedIn, _intAsRawFloat_sign_T) @[rawFloatFromIN.scala 50:29]
    node _intAsRawFloat_absIn_T = sub(UInt<1>("h00"), io.in) @[rawFloatFromIN.scala 51:31]
    node _intAsRawFloat_absIn_T_1 = tail(_intAsRawFloat_absIn_T, 1) @[rawFloatFromIN.scala 51:31]
    node intAsRawFloat_extAbsIn_lo = mux(intAsRawFloat_sign, _intAsRawFloat_absIn_T_1, io.in) @[rawFloatFromIN.scala 51:24]
    node _intAsRawFloat_extAbsIn_T = cat(UInt<32>("h00"), intAsRawFloat_extAbsIn_lo) @[Cat.scala 30:58]
    node intAsRawFloat_extAbsIn = bits(_intAsRawFloat_extAbsIn_T, 31, 0) @[rawFloatFromIN.scala 52:56]
    node _intAsRawFloat_adjustedNormDist_T = bits(intAsRawFloat_extAbsIn, 0, 0) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_1 = bits(intAsRawFloat_extAbsIn, 1, 1) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_2 = bits(intAsRawFloat_extAbsIn, 2, 2) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_3 = bits(intAsRawFloat_extAbsIn, 3, 3) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_4 = bits(intAsRawFloat_extAbsIn, 4, 4) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_5 = bits(intAsRawFloat_extAbsIn, 5, 5) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_6 = bits(intAsRawFloat_extAbsIn, 6, 6) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_7 = bits(intAsRawFloat_extAbsIn, 7, 7) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_8 = bits(intAsRawFloat_extAbsIn, 8, 8) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_9 = bits(intAsRawFloat_extAbsIn, 9, 9) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_10 = bits(intAsRawFloat_extAbsIn, 10, 10) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_11 = bits(intAsRawFloat_extAbsIn, 11, 11) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_12 = bits(intAsRawFloat_extAbsIn, 12, 12) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_13 = bits(intAsRawFloat_extAbsIn, 13, 13) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_14 = bits(intAsRawFloat_extAbsIn, 14, 14) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_15 = bits(intAsRawFloat_extAbsIn, 15, 15) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_16 = bits(intAsRawFloat_extAbsIn, 16, 16) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_17 = bits(intAsRawFloat_extAbsIn, 17, 17) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_18 = bits(intAsRawFloat_extAbsIn, 18, 18) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_19 = bits(intAsRawFloat_extAbsIn, 19, 19) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_20 = bits(intAsRawFloat_extAbsIn, 20, 20) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_21 = bits(intAsRawFloat_extAbsIn, 21, 21) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_22 = bits(intAsRawFloat_extAbsIn, 22, 22) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_23 = bits(intAsRawFloat_extAbsIn, 23, 23) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_24 = bits(intAsRawFloat_extAbsIn, 24, 24) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_25 = bits(intAsRawFloat_extAbsIn, 25, 25) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_26 = bits(intAsRawFloat_extAbsIn, 26, 26) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_27 = bits(intAsRawFloat_extAbsIn, 27, 27) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_28 = bits(intAsRawFloat_extAbsIn, 28, 28) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_29 = bits(intAsRawFloat_extAbsIn, 29, 29) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_30 = bits(intAsRawFloat_extAbsIn, 30, 30) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_31 = bits(intAsRawFloat_extAbsIn, 31, 31) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_32 = mux(_intAsRawFloat_adjustedNormDist_T_1, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_33 = mux(_intAsRawFloat_adjustedNormDist_T_2, UInt<5>("h01d"), _intAsRawFloat_adjustedNormDist_T_32) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_34 = mux(_intAsRawFloat_adjustedNormDist_T_3, UInt<5>("h01c"), _intAsRawFloat_adjustedNormDist_T_33) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_35 = mux(_intAsRawFloat_adjustedNormDist_T_4, UInt<5>("h01b"), _intAsRawFloat_adjustedNormDist_T_34) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_36 = mux(_intAsRawFloat_adjustedNormDist_T_5, UInt<5>("h01a"), _intAsRawFloat_adjustedNormDist_T_35) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_37 = mux(_intAsRawFloat_adjustedNormDist_T_6, UInt<5>("h019"), _intAsRawFloat_adjustedNormDist_T_36) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_38 = mux(_intAsRawFloat_adjustedNormDist_T_7, UInt<5>("h018"), _intAsRawFloat_adjustedNormDist_T_37) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_39 = mux(_intAsRawFloat_adjustedNormDist_T_8, UInt<5>("h017"), _intAsRawFloat_adjustedNormDist_T_38) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_40 = mux(_intAsRawFloat_adjustedNormDist_T_9, UInt<5>("h016"), _intAsRawFloat_adjustedNormDist_T_39) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_41 = mux(_intAsRawFloat_adjustedNormDist_T_10, UInt<5>("h015"), _intAsRawFloat_adjustedNormDist_T_40) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_42 = mux(_intAsRawFloat_adjustedNormDist_T_11, UInt<5>("h014"), _intAsRawFloat_adjustedNormDist_T_41) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_43 = mux(_intAsRawFloat_adjustedNormDist_T_12, UInt<5>("h013"), _intAsRawFloat_adjustedNormDist_T_42) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_44 = mux(_intAsRawFloat_adjustedNormDist_T_13, UInt<5>("h012"), _intAsRawFloat_adjustedNormDist_T_43) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_45 = mux(_intAsRawFloat_adjustedNormDist_T_14, UInt<5>("h011"), _intAsRawFloat_adjustedNormDist_T_44) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_46 = mux(_intAsRawFloat_adjustedNormDist_T_15, UInt<5>("h010"), _intAsRawFloat_adjustedNormDist_T_45) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_47 = mux(_intAsRawFloat_adjustedNormDist_T_16, UInt<4>("h0f"), _intAsRawFloat_adjustedNormDist_T_46) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_48 = mux(_intAsRawFloat_adjustedNormDist_T_17, UInt<4>("h0e"), _intAsRawFloat_adjustedNormDist_T_47) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_49 = mux(_intAsRawFloat_adjustedNormDist_T_18, UInt<4>("h0d"), _intAsRawFloat_adjustedNormDist_T_48) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_50 = mux(_intAsRawFloat_adjustedNormDist_T_19, UInt<4>("h0c"), _intAsRawFloat_adjustedNormDist_T_49) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_51 = mux(_intAsRawFloat_adjustedNormDist_T_20, UInt<4>("h0b"), _intAsRawFloat_adjustedNormDist_T_50) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_52 = mux(_intAsRawFloat_adjustedNormDist_T_21, UInt<4>("h0a"), _intAsRawFloat_adjustedNormDist_T_51) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_53 = mux(_intAsRawFloat_adjustedNormDist_T_22, UInt<4>("h09"), _intAsRawFloat_adjustedNormDist_T_52) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_54 = mux(_intAsRawFloat_adjustedNormDist_T_23, UInt<4>("h08"), _intAsRawFloat_adjustedNormDist_T_53) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_55 = mux(_intAsRawFloat_adjustedNormDist_T_24, UInt<3>("h07"), _intAsRawFloat_adjustedNormDist_T_54) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_56 = mux(_intAsRawFloat_adjustedNormDist_T_25, UInt<3>("h06"), _intAsRawFloat_adjustedNormDist_T_55) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_57 = mux(_intAsRawFloat_adjustedNormDist_T_26, UInt<3>("h05"), _intAsRawFloat_adjustedNormDist_T_56) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_58 = mux(_intAsRawFloat_adjustedNormDist_T_27, UInt<3>("h04"), _intAsRawFloat_adjustedNormDist_T_57) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_59 = mux(_intAsRawFloat_adjustedNormDist_T_28, UInt<2>("h03"), _intAsRawFloat_adjustedNormDist_T_58) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_60 = mux(_intAsRawFloat_adjustedNormDist_T_29, UInt<2>("h02"), _intAsRawFloat_adjustedNormDist_T_59) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_61 = mux(_intAsRawFloat_adjustedNormDist_T_30, UInt<1>("h01"), _intAsRawFloat_adjustedNormDist_T_60) @[Mux.scala 47:69]
    node intAsRawFloat_adjustedNormDist = mux(_intAsRawFloat_adjustedNormDist_T_31, UInt<1>("h00"), _intAsRawFloat_adjustedNormDist_T_61) @[Mux.scala 47:69]
    node _intAsRawFloat_sig_T = dshl(intAsRawFloat_extAbsIn, intAsRawFloat_adjustedNormDist) @[rawFloatFromIN.scala 55:22]
    node intAsRawFloat_sig = bits(_intAsRawFloat_sig_T, 31, 0) @[rawFloatFromIN.scala 55:41]
    wire intAsRawFloat : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<8>, sig : UInt<33>} @[rawFloatFromIN.scala 58:23]
    intAsRawFloat is invalid @[rawFloatFromIN.scala 58:23]
    intAsRawFloat.isNaN <= UInt<1>("h00") @[rawFloatFromIN.scala 59:20]
    intAsRawFloat.isInf <= UInt<1>("h00") @[rawFloatFromIN.scala 60:20]
    node _intAsRawFloat_out_isZero_T = bits(intAsRawFloat_sig, 31, 31) @[rawFloatFromIN.scala 61:28]
    node _intAsRawFloat_out_isZero_T_1 = eq(_intAsRawFloat_out_isZero_T, UInt<1>("h00")) @[rawFloatFromIN.scala 61:23]
    intAsRawFloat.isZero <= _intAsRawFloat_out_isZero_T_1 @[rawFloatFromIN.scala 61:20]
    intAsRawFloat.sign <= intAsRawFloat_sign @[rawFloatFromIN.scala 62:20]
    node _intAsRawFloat_out_sExp_T = bits(intAsRawFloat_adjustedNormDist, 4, 0) @[rawFloatFromIN.scala 63:56]
    node intAsRawFloat_out_sExp_lo = not(_intAsRawFloat_out_sExp_T) @[rawFloatFromIN.scala 63:39]
    node _intAsRawFloat_out_sExp_T_1 = cat(UInt<2>("h02"), intAsRawFloat_out_sExp_lo) @[Cat.scala 30:58]
    node _intAsRawFloat_out_sExp_T_2 = cvt(_intAsRawFloat_out_sExp_T_1) @[rawFloatFromIN.scala 63:75]
    intAsRawFloat.sExp <= _intAsRawFloat_out_sExp_T_2 @[rawFloatFromIN.scala 63:20]
    intAsRawFloat.sig <= intAsRawFloat_sig @[rawFloatFromIN.scala 64:20]
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_2 @[INToRecFN.scala 59:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= UInt<1>("h00") @[INToRecFN.scala 67:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[INToRecFN.scala 68:44]
    roundAnyRawFNToRecFN.io.in <- intAsRawFloat @[INToRecFN.scala 69:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[INToRecFN.scala 70:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[INToRecFN.scala 71:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[INToRecFN.scala 72:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[INToRecFN.scala 73:23]
    
  module AddSub : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : UInt<32>, flip in2 : UInt<32>, flip op : UInt<1>, flip useINT : UInt<1>, outIEEE : UInt<33>}
    
    reg op_sel : UInt<1>, clock @[AddSub.scala 25:28]
    op_sel <= io.op @[AddSub.scala 25:28]
    wire useINT_sel : UInt<1>
    useINT_sel <= io.useINT
    reg fN_in1 : UInt, clock @[AddSub.scala 30:24]
    fN_in1 <= io.in1 @[AddSub.scala 30:24]
    reg fN_in2 : UInt, clock @[AddSub.scala 31:24]
    fN_in2 <= io.in2 @[AddSub.scala 31:24]
    inst addRecFN of AddRecFN @[AddSub.scala 33:24]
    addRecFN.io.subOp <= op_sel @[AddSub.scala 34:21]
    addRecFN.io.roundingMode <= UInt<3>("h04") @[AddSub.scala 35:30]
    addRecFN.io.detectTininess <= UInt<1>("h01") @[AddSub.scala 36:30]
    when useINT_sel : @[AddSub.scala 38:19]
      inst iNToRecFN_1 of INToRecFN @[AddSub.scala 40:29]
      iNToRecFN_1.io.signedIn <= UInt<1>("h01") @[AddSub.scala 41:29]
      iNToRecFN_1.io.in <= fN_in1 @[AddSub.scala 42:23]
      iNToRecFN_1.io.roundingMode <= UInt<3>("h04") @[AddSub.scala 43:35]
      iNToRecFN_1.io.detectTininess <= UInt<1>("h01") @[AddSub.scala 44:35]
      inst iNToRecFN_2 of INToRecFN_1 @[AddSub.scala 47:29]
      iNToRecFN_2.io.signedIn <= UInt<1>("h01") @[AddSub.scala 48:29]
      iNToRecFN_2.io.in <= fN_in2 @[AddSub.scala 49:23]
      iNToRecFN_2.io.roundingMode <= UInt<3>("h04") @[AddSub.scala 50:35]
      iNToRecFN_2.io.detectTininess <= UInt<1>("h01") @[AddSub.scala 51:35]
      addRecFN.io.a <= iNToRecFN_1.io.out @[AddSub.scala 54:19]
      addRecFN.io.b <= iNToRecFN_2.io.out @[AddSub.scala 55:19]
      skip @[AddSub.scala 38:19]
    else : @[AddSub.scala 58:16]
      node addRecFN_io_a_rawIn_sign = bits(fN_in1, 31, 31) @[rawFloatFromFN.scala 46:22]
      node addRecFN_io_a_rawIn_expIn = bits(fN_in1, 30, 23) @[rawFloatFromFN.scala 47:23]
      node addRecFN_io_a_rawIn_fractIn = bits(fN_in1, 22, 0) @[rawFloatFromFN.scala 48:25]
      node addRecFN_io_a_rawIn_isZeroExpIn = eq(addRecFN_io_a_rawIn_expIn, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
      node addRecFN_io_a_rawIn_isZeroFractIn = eq(addRecFN_io_a_rawIn_fractIn, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
      node _addRecFN_io_a_rawIn_normDist_T = bits(addRecFN_io_a_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_1 = bits(addRecFN_io_a_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_2 = bits(addRecFN_io_a_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_3 = bits(addRecFN_io_a_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_4 = bits(addRecFN_io_a_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_5 = bits(addRecFN_io_a_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_6 = bits(addRecFN_io_a_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_7 = bits(addRecFN_io_a_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_8 = bits(addRecFN_io_a_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_9 = bits(addRecFN_io_a_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_10 = bits(addRecFN_io_a_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_11 = bits(addRecFN_io_a_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_12 = bits(addRecFN_io_a_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_13 = bits(addRecFN_io_a_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_14 = bits(addRecFN_io_a_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_15 = bits(addRecFN_io_a_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_16 = bits(addRecFN_io_a_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_17 = bits(addRecFN_io_a_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_18 = bits(addRecFN_io_a_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_19 = bits(addRecFN_io_a_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_20 = bits(addRecFN_io_a_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_21 = bits(addRecFN_io_a_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_22 = bits(addRecFN_io_a_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _addRecFN_io_a_rawIn_normDist_T_23 = mux(_addRecFN_io_a_rawIn_normDist_T_1, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_24 = mux(_addRecFN_io_a_rawIn_normDist_T_2, UInt<5>("h014"), _addRecFN_io_a_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_25 = mux(_addRecFN_io_a_rawIn_normDist_T_3, UInt<5>("h013"), _addRecFN_io_a_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_26 = mux(_addRecFN_io_a_rawIn_normDist_T_4, UInt<5>("h012"), _addRecFN_io_a_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_27 = mux(_addRecFN_io_a_rawIn_normDist_T_5, UInt<5>("h011"), _addRecFN_io_a_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_28 = mux(_addRecFN_io_a_rawIn_normDist_T_6, UInt<5>("h010"), _addRecFN_io_a_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_29 = mux(_addRecFN_io_a_rawIn_normDist_T_7, UInt<4>("h0f"), _addRecFN_io_a_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_30 = mux(_addRecFN_io_a_rawIn_normDist_T_8, UInt<4>("h0e"), _addRecFN_io_a_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_31 = mux(_addRecFN_io_a_rawIn_normDist_T_9, UInt<4>("h0d"), _addRecFN_io_a_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_32 = mux(_addRecFN_io_a_rawIn_normDist_T_10, UInt<4>("h0c"), _addRecFN_io_a_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_33 = mux(_addRecFN_io_a_rawIn_normDist_T_11, UInt<4>("h0b"), _addRecFN_io_a_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_34 = mux(_addRecFN_io_a_rawIn_normDist_T_12, UInt<4>("h0a"), _addRecFN_io_a_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_35 = mux(_addRecFN_io_a_rawIn_normDist_T_13, UInt<4>("h09"), _addRecFN_io_a_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_36 = mux(_addRecFN_io_a_rawIn_normDist_T_14, UInt<4>("h08"), _addRecFN_io_a_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_37 = mux(_addRecFN_io_a_rawIn_normDist_T_15, UInt<3>("h07"), _addRecFN_io_a_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_38 = mux(_addRecFN_io_a_rawIn_normDist_T_16, UInt<3>("h06"), _addRecFN_io_a_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_39 = mux(_addRecFN_io_a_rawIn_normDist_T_17, UInt<3>("h05"), _addRecFN_io_a_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_40 = mux(_addRecFN_io_a_rawIn_normDist_T_18, UInt<3>("h04"), _addRecFN_io_a_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_41 = mux(_addRecFN_io_a_rawIn_normDist_T_19, UInt<2>("h03"), _addRecFN_io_a_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_42 = mux(_addRecFN_io_a_rawIn_normDist_T_20, UInt<2>("h02"), _addRecFN_io_a_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_normDist_T_43 = mux(_addRecFN_io_a_rawIn_normDist_T_21, UInt<1>("h01"), _addRecFN_io_a_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node addRecFN_io_a_rawIn_normDist = mux(_addRecFN_io_a_rawIn_normDist_T_22, UInt<1>("h00"), _addRecFN_io_a_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _addRecFN_io_a_rawIn_subnormFract_T = dshl(addRecFN_io_a_rawIn_fractIn, addRecFN_io_a_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _addRecFN_io_a_rawIn_subnormFract_T_1 = bits(_addRecFN_io_a_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node addRecFN_io_a_rawIn_subnormFract = shl(_addRecFN_io_a_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _addRecFN_io_a_rawIn_adjustedExp_T = xor(addRecFN_io_a_rawIn_normDist, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
      node _addRecFN_io_a_rawIn_adjustedExp_T_1 = mux(addRecFN_io_a_rawIn_isZeroExpIn, _addRecFN_io_a_rawIn_adjustedExp_T, addRecFN_io_a_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _addRecFN_io_a_rawIn_adjustedExp_T_2 = mux(addRecFN_io_a_rawIn_isZeroExpIn, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
      node _addRecFN_io_a_rawIn_adjustedExp_T_3 = or(UInt<8>("h080"), _addRecFN_io_a_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _addRecFN_io_a_rawIn_adjustedExp_T_4 = add(_addRecFN_io_a_rawIn_adjustedExp_T_1, _addRecFN_io_a_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node addRecFN_io_a_rawIn_adjustedExp = tail(_addRecFN_io_a_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node addRecFN_io_a_rawIn_isZero = and(addRecFN_io_a_rawIn_isZeroExpIn, addRecFN_io_a_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _addRecFN_io_a_rawIn_isSpecial_T = bits(addRecFN_io_a_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node addRecFN_io_a_rawIn_isSpecial = eq(_addRecFN_io_a_rawIn_isSpecial_T, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
      wire addRecFN_io_a_rawIn : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      addRecFN_io_a_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _addRecFN_io_a_rawIn_out_isNaN_T = eq(addRecFN_io_a_rawIn_isZeroFractIn, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
      node _addRecFN_io_a_rawIn_out_isNaN_T_1 = and(addRecFN_io_a_rawIn_isSpecial, _addRecFN_io_a_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      addRecFN_io_a_rawIn.isNaN <= _addRecFN_io_a_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _addRecFN_io_a_rawIn_out_isInf_T = and(addRecFN_io_a_rawIn_isSpecial, addRecFN_io_a_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      addRecFN_io_a_rawIn.isInf <= _addRecFN_io_a_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      addRecFN_io_a_rawIn.isZero <= addRecFN_io_a_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      addRecFN_io_a_rawIn.sign <= addRecFN_io_a_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _addRecFN_io_a_rawIn_out_sExp_T = bits(addRecFN_io_a_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _addRecFN_io_a_rawIn_out_sExp_T_1 = cvt(_addRecFN_io_a_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      addRecFN_io_a_rawIn.sExp <= _addRecFN_io_a_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node addRecFN_io_a_rawIn_out_sig_hi_lo = eq(addRecFN_io_a_rawIn_isZero, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
      node addRecFN_io_a_rawIn_out_sig_lo = mux(addRecFN_io_a_rawIn_isZeroExpIn, addRecFN_io_a_rawIn_subnormFract, addRecFN_io_a_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node addRecFN_io_a_rawIn_out_sig_hi = cat(UInt<1>("h00"), addRecFN_io_a_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
      node _addRecFN_io_a_rawIn_out_sig_T = cat(addRecFN_io_a_rawIn_out_sig_hi, addRecFN_io_a_rawIn_out_sig_lo) @[Cat.scala 30:58]
      addRecFN_io_a_rawIn.sig <= _addRecFN_io_a_rawIn_out_sig_T @[rawFloatFromFN.scala 71:17]
      node _addRecFN_io_a_T = bits(addRecFN_io_a_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _addRecFN_io_a_T_1 = mux(addRecFN_io_a_rawIn.isZero, UInt<3>("h00"), _addRecFN_io_a_T) @[recFNFromFN.scala 48:16]
      node _addRecFN_io_a_T_2 = mux(addRecFN_io_a_rawIn.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
      node addRecFN_io_a_hi_lo = or(_addRecFN_io_a_T_1, _addRecFN_io_a_T_2) @[recFNFromFN.scala 48:79]
      node addRecFN_io_a_lo_hi = bits(addRecFN_io_a_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node addRecFN_io_a_lo_lo = bits(addRecFN_io_a_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node addRecFN_io_a_lo = cat(addRecFN_io_a_lo_hi, addRecFN_io_a_lo_lo) @[Cat.scala 30:58]
      node addRecFN_io_a_hi = cat(addRecFN_io_a_rawIn.sign, addRecFN_io_a_hi_lo) @[Cat.scala 30:58]
      node _addRecFN_io_a_T_3 = cat(addRecFN_io_a_hi, addRecFN_io_a_lo) @[Cat.scala 30:58]
      addRecFN.io.a <= _addRecFN_io_a_T_3 @[AddSub.scala 63:19]
      node addRecFN_io_b_rawIn_sign = bits(fN_in2, 31, 31) @[rawFloatFromFN.scala 46:22]
      node addRecFN_io_b_rawIn_expIn = bits(fN_in2, 30, 23) @[rawFloatFromFN.scala 47:23]
      node addRecFN_io_b_rawIn_fractIn = bits(fN_in2, 22, 0) @[rawFloatFromFN.scala 48:25]
      node addRecFN_io_b_rawIn_isZeroExpIn = eq(addRecFN_io_b_rawIn_expIn, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
      node addRecFN_io_b_rawIn_isZeroFractIn = eq(addRecFN_io_b_rawIn_fractIn, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
      node _addRecFN_io_b_rawIn_normDist_T = bits(addRecFN_io_b_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_1 = bits(addRecFN_io_b_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_2 = bits(addRecFN_io_b_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_3 = bits(addRecFN_io_b_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_4 = bits(addRecFN_io_b_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_5 = bits(addRecFN_io_b_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_6 = bits(addRecFN_io_b_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_7 = bits(addRecFN_io_b_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_8 = bits(addRecFN_io_b_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_9 = bits(addRecFN_io_b_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_10 = bits(addRecFN_io_b_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_11 = bits(addRecFN_io_b_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_12 = bits(addRecFN_io_b_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_13 = bits(addRecFN_io_b_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_14 = bits(addRecFN_io_b_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_15 = bits(addRecFN_io_b_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_16 = bits(addRecFN_io_b_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_17 = bits(addRecFN_io_b_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_18 = bits(addRecFN_io_b_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_19 = bits(addRecFN_io_b_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_20 = bits(addRecFN_io_b_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_21 = bits(addRecFN_io_b_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_22 = bits(addRecFN_io_b_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
      node _addRecFN_io_b_rawIn_normDist_T_23 = mux(_addRecFN_io_b_rawIn_normDist_T_1, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_24 = mux(_addRecFN_io_b_rawIn_normDist_T_2, UInt<5>("h014"), _addRecFN_io_b_rawIn_normDist_T_23) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_25 = mux(_addRecFN_io_b_rawIn_normDist_T_3, UInt<5>("h013"), _addRecFN_io_b_rawIn_normDist_T_24) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_26 = mux(_addRecFN_io_b_rawIn_normDist_T_4, UInt<5>("h012"), _addRecFN_io_b_rawIn_normDist_T_25) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_27 = mux(_addRecFN_io_b_rawIn_normDist_T_5, UInt<5>("h011"), _addRecFN_io_b_rawIn_normDist_T_26) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_28 = mux(_addRecFN_io_b_rawIn_normDist_T_6, UInt<5>("h010"), _addRecFN_io_b_rawIn_normDist_T_27) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_29 = mux(_addRecFN_io_b_rawIn_normDist_T_7, UInt<4>("h0f"), _addRecFN_io_b_rawIn_normDist_T_28) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_30 = mux(_addRecFN_io_b_rawIn_normDist_T_8, UInt<4>("h0e"), _addRecFN_io_b_rawIn_normDist_T_29) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_31 = mux(_addRecFN_io_b_rawIn_normDist_T_9, UInt<4>("h0d"), _addRecFN_io_b_rawIn_normDist_T_30) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_32 = mux(_addRecFN_io_b_rawIn_normDist_T_10, UInt<4>("h0c"), _addRecFN_io_b_rawIn_normDist_T_31) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_33 = mux(_addRecFN_io_b_rawIn_normDist_T_11, UInt<4>("h0b"), _addRecFN_io_b_rawIn_normDist_T_32) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_34 = mux(_addRecFN_io_b_rawIn_normDist_T_12, UInt<4>("h0a"), _addRecFN_io_b_rawIn_normDist_T_33) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_35 = mux(_addRecFN_io_b_rawIn_normDist_T_13, UInt<4>("h09"), _addRecFN_io_b_rawIn_normDist_T_34) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_36 = mux(_addRecFN_io_b_rawIn_normDist_T_14, UInt<4>("h08"), _addRecFN_io_b_rawIn_normDist_T_35) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_37 = mux(_addRecFN_io_b_rawIn_normDist_T_15, UInt<3>("h07"), _addRecFN_io_b_rawIn_normDist_T_36) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_38 = mux(_addRecFN_io_b_rawIn_normDist_T_16, UInt<3>("h06"), _addRecFN_io_b_rawIn_normDist_T_37) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_39 = mux(_addRecFN_io_b_rawIn_normDist_T_17, UInt<3>("h05"), _addRecFN_io_b_rawIn_normDist_T_38) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_40 = mux(_addRecFN_io_b_rawIn_normDist_T_18, UInt<3>("h04"), _addRecFN_io_b_rawIn_normDist_T_39) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_41 = mux(_addRecFN_io_b_rawIn_normDist_T_19, UInt<2>("h03"), _addRecFN_io_b_rawIn_normDist_T_40) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_42 = mux(_addRecFN_io_b_rawIn_normDist_T_20, UInt<2>("h02"), _addRecFN_io_b_rawIn_normDist_T_41) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_normDist_T_43 = mux(_addRecFN_io_b_rawIn_normDist_T_21, UInt<1>("h01"), _addRecFN_io_b_rawIn_normDist_T_42) @[Mux.scala 47:69]
      node addRecFN_io_b_rawIn_normDist = mux(_addRecFN_io_b_rawIn_normDist_T_22, UInt<1>("h00"), _addRecFN_io_b_rawIn_normDist_T_43) @[Mux.scala 47:69]
      node _addRecFN_io_b_rawIn_subnormFract_T = dshl(addRecFN_io_b_rawIn_fractIn, addRecFN_io_b_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
      node _addRecFN_io_b_rawIn_subnormFract_T_1 = bits(_addRecFN_io_b_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
      node addRecFN_io_b_rawIn_subnormFract = shl(_addRecFN_io_b_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
      node _addRecFN_io_b_rawIn_adjustedExp_T = xor(addRecFN_io_b_rawIn_normDist, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
      node _addRecFN_io_b_rawIn_adjustedExp_T_1 = mux(addRecFN_io_b_rawIn_isZeroExpIn, _addRecFN_io_b_rawIn_adjustedExp_T, addRecFN_io_b_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
      node _addRecFN_io_b_rawIn_adjustedExp_T_2 = mux(addRecFN_io_b_rawIn_isZeroExpIn, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
      node _addRecFN_io_b_rawIn_adjustedExp_T_3 = or(UInt<8>("h080"), _addRecFN_io_b_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
      node _addRecFN_io_b_rawIn_adjustedExp_T_4 = add(_addRecFN_io_b_rawIn_adjustedExp_T_1, _addRecFN_io_b_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
      node addRecFN_io_b_rawIn_adjustedExp = tail(_addRecFN_io_b_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
      node addRecFN_io_b_rawIn_isZero = and(addRecFN_io_b_rawIn_isZeroExpIn, addRecFN_io_b_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
      node _addRecFN_io_b_rawIn_isSpecial_T = bits(addRecFN_io_b_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
      node addRecFN_io_b_rawIn_isSpecial = eq(_addRecFN_io_b_rawIn_isSpecial_T, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
      wire addRecFN_io_b_rawIn : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
      addRecFN_io_b_rawIn is invalid @[rawFloatFromFN.scala 65:23]
      node _addRecFN_io_b_rawIn_out_isNaN_T = eq(addRecFN_io_b_rawIn_isZeroFractIn, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
      node _addRecFN_io_b_rawIn_out_isNaN_T_1 = and(addRecFN_io_b_rawIn_isSpecial, _addRecFN_io_b_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
      addRecFN_io_b_rawIn.isNaN <= _addRecFN_io_b_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
      node _addRecFN_io_b_rawIn_out_isInf_T = and(addRecFN_io_b_rawIn_isSpecial, addRecFN_io_b_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
      addRecFN_io_b_rawIn.isInf <= _addRecFN_io_b_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
      addRecFN_io_b_rawIn.isZero <= addRecFN_io_b_rawIn_isZero @[rawFloatFromFN.scala 68:20]
      addRecFN_io_b_rawIn.sign <= addRecFN_io_b_rawIn_sign @[rawFloatFromFN.scala 69:20]
      node _addRecFN_io_b_rawIn_out_sExp_T = bits(addRecFN_io_b_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
      node _addRecFN_io_b_rawIn_out_sExp_T_1 = cvt(_addRecFN_io_b_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
      addRecFN_io_b_rawIn.sExp <= _addRecFN_io_b_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
      node addRecFN_io_b_rawIn_out_sig_hi_lo = eq(addRecFN_io_b_rawIn_isZero, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
      node addRecFN_io_b_rawIn_out_sig_lo = mux(addRecFN_io_b_rawIn_isZeroExpIn, addRecFN_io_b_rawIn_subnormFract, addRecFN_io_b_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
      node addRecFN_io_b_rawIn_out_sig_hi = cat(UInt<1>("h00"), addRecFN_io_b_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
      node _addRecFN_io_b_rawIn_out_sig_T = cat(addRecFN_io_b_rawIn_out_sig_hi, addRecFN_io_b_rawIn_out_sig_lo) @[Cat.scala 30:58]
      addRecFN_io_b_rawIn.sig <= _addRecFN_io_b_rawIn_out_sig_T @[rawFloatFromFN.scala 71:17]
      node _addRecFN_io_b_T = bits(addRecFN_io_b_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
      node _addRecFN_io_b_T_1 = mux(addRecFN_io_b_rawIn.isZero, UInt<3>("h00"), _addRecFN_io_b_T) @[recFNFromFN.scala 48:16]
      node _addRecFN_io_b_T_2 = mux(addRecFN_io_b_rawIn.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
      node addRecFN_io_b_hi_lo = or(_addRecFN_io_b_T_1, _addRecFN_io_b_T_2) @[recFNFromFN.scala 48:79]
      node addRecFN_io_b_lo_hi = bits(addRecFN_io_b_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
      node addRecFN_io_b_lo_lo = bits(addRecFN_io_b_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
      node addRecFN_io_b_lo = cat(addRecFN_io_b_lo_hi, addRecFN_io_b_lo_lo) @[Cat.scala 30:58]
      node addRecFN_io_b_hi = cat(addRecFN_io_b_rawIn.sign, addRecFN_io_b_hi_lo) @[Cat.scala 30:58]
      node _addRecFN_io_b_T_3 = cat(addRecFN_io_b_hi, addRecFN_io_b_lo) @[Cat.scala 30:58]
      addRecFN.io.b <= _addRecFN_io_b_T_3 @[AddSub.scala 64:19]
      skip @[AddSub.scala 58:16]
    wire addRecFN_out : UInt
    addRecFN_out <= addRecFN.io.out
    node outIEEE_out_rawIn_exp = bits(addRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _outIEEE_out_rawIn_isZero_T = bits(outIEEE_out_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node outIEEE_out_rawIn_isZero = eq(_outIEEE_out_rawIn_isZero_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _outIEEE_out_rawIn_isSpecial_T = bits(outIEEE_out_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node outIEEE_out_rawIn_isSpecial = eq(_outIEEE_out_rawIn_isSpecial_T, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire outIEEE_out_rawIn : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    outIEEE_out_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _outIEEE_out_rawIn_out_isNaN_T = bits(outIEEE_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _outIEEE_out_rawIn_out_isNaN_T_1 = and(outIEEE_out_rawIn_isSpecial, _outIEEE_out_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    outIEEE_out_rawIn.isNaN <= _outIEEE_out_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _outIEEE_out_rawIn_out_isInf_T = bits(outIEEE_out_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _outIEEE_out_rawIn_out_isInf_T_1 = eq(_outIEEE_out_rawIn_out_isInf_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _outIEEE_out_rawIn_out_isInf_T_2 = and(outIEEE_out_rawIn_isSpecial, _outIEEE_out_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    outIEEE_out_rawIn.isInf <= _outIEEE_out_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    outIEEE_out_rawIn.isZero <= outIEEE_out_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _outIEEE_out_rawIn_out_sign_T = bits(addRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    outIEEE_out_rawIn.sign <= _outIEEE_out_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _outIEEE_out_rawIn_out_sExp_T = cvt(outIEEE_out_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    outIEEE_out_rawIn.sExp <= _outIEEE_out_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node outIEEE_out_rawIn_out_sig_hi_lo = eq(outIEEE_out_rawIn_isZero, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node outIEEE_out_rawIn_out_sig_lo = bits(addRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node outIEEE_out_rawIn_out_sig_hi = cat(UInt<1>("h00"), outIEEE_out_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node _outIEEE_out_rawIn_out_sig_T = cat(outIEEE_out_rawIn_out_sig_hi, outIEEE_out_rawIn_out_sig_lo) @[Cat.scala 30:58]
    outIEEE_out_rawIn.sig <= _outIEEE_out_rawIn_out_sig_T @[rawFloatFromRecFN.scala 60:20]
    node outIEEE_out_isSubnormal = lt(outIEEE_out_rawIn.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _outIEEE_out_denormShiftDist_T = bits(outIEEE_out_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _outIEEE_out_denormShiftDist_T_1 = sub(UInt<1>("h01"), _outIEEE_out_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node outIEEE_out_denormShiftDist = tail(_outIEEE_out_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _outIEEE_out_denormFract_T = shr(outIEEE_out_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _outIEEE_out_denormFract_T_1 = dshr(_outIEEE_out_denormFract_T, outIEEE_out_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node outIEEE_out_denormFract = bits(_outIEEE_out_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
    node _outIEEE_out_expOut_T = bits(outIEEE_out_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _outIEEE_out_expOut_T_1 = sub(_outIEEE_out_expOut_T, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _outIEEE_out_expOut_T_2 = tail(_outIEEE_out_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _outIEEE_out_expOut_T_3 = mux(outIEEE_out_isSubnormal, UInt<1>("h00"), _outIEEE_out_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _outIEEE_out_expOut_T_4 = or(outIEEE_out_rawIn.isNaN, outIEEE_out_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _outIEEE_out_expOut_T_5 = bits(_outIEEE_out_expOut_T_4, 0, 0) @[Bitwise.scala 72:15]
    node _outIEEE_out_expOut_T_6 = mux(_outIEEE_out_expOut_T_5, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node outIEEE_out_hi_lo = or(_outIEEE_out_expOut_T_3, _outIEEE_out_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _outIEEE_out_fractOut_T = bits(outIEEE_out_rawIn.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _outIEEE_out_fractOut_T_1 = mux(outIEEE_out_rawIn.isInf, UInt<1>("h00"), _outIEEE_out_fractOut_T) @[fNFromRecFN.scala 63:20]
    node outIEEE_out_lo = mux(outIEEE_out_isSubnormal, outIEEE_out_denormFract, _outIEEE_out_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node outIEEE_out_hi = cat(outIEEE_out_rawIn.sign, outIEEE_out_hi_lo) @[Cat.scala 30:58]
    node _outIEEE_out_T = cat(outIEEE_out_hi, outIEEE_out_lo) @[Cat.scala 30:58]
    wire outIEEE_out : UInt
    outIEEE_out <= _outIEEE_out_T
    io.outIEEE <= outIEEE_out @[AddSub.scala 72:14]
    
