// version: 1.1.1, chiselVersion: 3.4.3, for more information, visit https://github.com/easysoc/layered-firrtl
algorithm: layered
hierarchyHandling: INCLUDE_CHILDREN

node MulFullRawFN {
    portConstraints: FIXED_SIDE
    nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
    nodeSize.constraints: "PORTS PORT_LABELS NODE_LABELS"
    label "MulFullRawFN"
    
    port io_a_isNaN {
        ^port.side: WEST
        label "io_a_isNaN"
    }
    port io_a_isInf {
        ^port.side: WEST
        label "io_a_isInf"
    }
    port io_a_isZero {
        ^port.side: WEST
        label "io_a_isZero"
    }
    port io_a_sign {
        ^port.side: WEST
        label "io_a_sign"
    }
    port io_a_sExp {
        ^port.side: WEST
        label "io_a_sExp"
    }
    port io_a_sig {
        ^port.side: WEST
        label "io_a_sig"
    }
    port io_b_isNaN {
        ^port.side: WEST
        label "io_b_isNaN"
    }
    port io_b_isInf {
        ^port.side: WEST
        label "io_b_isInf"
    }
    port io_b_isZero {
        ^port.side: WEST
        label "io_b_isZero"
    }
    port io_b_sign {
        ^port.side: WEST
        label "io_b_sign"
    }
    port io_b_sExp {
        ^port.side: WEST
        label "io_b_sExp"
    }
    port io_b_sig {
        ^port.side: WEST
        label "io_b_sig"
    }
    port io_invalidExc {
        ^port.side: EAST
        label "io_invalidExc"
    }
    port io_rawOut_isNaN {
        ^port.side: EAST
        label "io_rawOut_isNaN"
    }
    port io_rawOut_isInf {
        ^port.side: EAST
        label "io_rawOut_isInf"
    }
    port io_rawOut_isZero {
        ^port.side: EAST
        label "io_rawOut_isZero"
    }
    port io_rawOut_sign {
        ^port.side: EAST
        label "io_rawOut_sign"
    }
    port io_rawOut_sExp {
        ^port.side: EAST
        label "io_rawOut_sExp"
    }
    port io_rawOut_sig {
        ^port.side: EAST
        label "io_rawOut_sig"
    }
    node and_1054 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "and"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node and_1055 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "and"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node or_1056 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "or"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node add_1057 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "add"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node tail_1058 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "tail"
        port in1 {
            ^port.side: "WEST"
        }
        port in2 {
            ^port.side: "WEST"
            label "1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node asSInt_1059 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        label "asSInt"
        port in1 {
            ^port.side: "WEST"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node sub_1060 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "sub"
        port in2 {
            ^port.side: "WEST"
            label "256"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node tail_1061 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "tail"
        port in1 {
            ^port.side: "WEST"
        }
        port in2 {
            ^port.side: "WEST"
            label "1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node mul_1062 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mul"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node bits_1063 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "bits"
        port in1 {
            ^port.side: "WEST"
            ^port.index:3
        }
        port in2 {
            ^port.side: "WEST"
            ^port.index:2
            label "22"
        }
        port in3 {
            ^port.side: "WEST"
            ^port.index:1
            label "22"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node not_1064 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        label "not"
        port in1 {
            ^port.side: "WEST"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node and_1065 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "and"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node bits_1066 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "bits"
        port in1 {
            ^port.side: "WEST"
            ^port.index:3
        }
        port in2 {
            ^port.side: "WEST"
            ^port.index:2
            label "22"
        }
        port in3 {
            ^port.side: "WEST"
            ^port.index:1
            label "22"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node not_1067 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        label "not"
        port in1 {
            ^port.side: "WEST"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node and_1068 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "and"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node or_1069 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "or"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node or_1070 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "or"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node or_1071 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "or"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node or_1072 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "or"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node or_1073 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "or"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node xor_1074 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "xor"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node asSInt_1075 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        label "asSInt"
        port in1 {
            ^port.side: "WEST"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node bits_1076 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "bits"
        port in1 {
            ^port.side: "WEST"
            ^port.index:3
        }
        port in2 {
            ^port.side: "WEST"
            ^port.index:2
            label "47"
        }
        port in3 {
            ^port.side: "WEST"
            ^port.index:1
            label "0"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    edge e2244 : MulFullRawFN.io_a_isInf -> and_1054.in1
    edge e2245 : MulFullRawFN.io_a_sig -> mul_1062.in1
    edge e2246 : or_1070.out -> MulFullRawFN.io_invalidExc
    edge e2247 : MulFullRawFN.io_a_isZero -> or_1073.in1
    edge e2248 : MulFullRawFN.io_b_sig -> bits_1066.in1
    edge e2249 : MulFullRawFN.io_b_sign -> xor_1074.in2
    edge e2250 : not_1064.out -> and_1065.in2
    edge e2251 : MulFullRawFN.io_a_sig -> bits_1063.in1
    edge e2252 : and_1068.out -> or_1069.in2
    edge e2253 : MulFullRawFN.io_b_isNaN -> and_1068.in1
    edge e2254 : MulFullRawFN.io_b_isNaN -> or_1071.in2
    edge e2255 : bits_1076.out -> MulFullRawFN.io_rawOut_sig
    edge e2256 : tail_1058.out -> asSInt_1059.in1
    edge e2257 : add_1057.out -> tail_1058.in1
    edge e2258 : and_1055.out -> or_1056.in2
    edge e2259 : or_1069.out -> or_1070.in1
    edge e2260 : MulFullRawFN.io_a_sign -> xor_1074.in1
    edge e2261 : mul_1062.out -> bits_1076.in1
    edge e2262 : MulFullRawFN.io_a_isZero -> and_1055.in1
    edge e2263 : and_1054.out -> or_1056.in1
    edge e2264 : or_1072.out -> MulFullRawFN.io_rawOut_isInf
    edge e2265 : MulFullRawFN.io_a_isNaN -> and_1065.in1
    edge e2266 : xor_1074.out -> MulFullRawFN.io_rawOut_sign
    edge e2267 : and_1065.out -> or_1069.in1
    edge e2268 : MulFullRawFN.io_b_isInf -> or_1072.in2
    edge e2269 : tail_1061.out -> asSInt_1075.in1
    edge e2270 : MulFullRawFN.io_b_sig -> mul_1062.in2
    edge e2271 : asSInt_1059.out -> sub_1060.in1
    edge e2272 : sub_1060.out -> tail_1061.in1
    edge e2273 : MulFullRawFN.io_b_isZero -> and_1054.in2
    edge e2274 : MulFullRawFN.io_a_isNaN -> or_1071.in1
    edge e2275 : bits_1066.out -> not_1067.in1
    edge e2276 : MulFullRawFN.io_b_isZero -> or_1073.in2
    edge e2277 : or_1071.out -> MulFullRawFN.io_rawOut_isNaN
    edge e2278 : MulFullRawFN.io_b_sExp -> add_1057.in2
    edge e2279 : bits_1063.out -> not_1064.in1
    edge e2280 : MulFullRawFN.io_a_isInf -> or_1072.in1
    edge e2281 : not_1067.out -> and_1068.in2
    edge e2282 : MulFullRawFN.io_a_sExp -> add_1057.in1
    edge e2283 : MulFullRawFN.io_b_isInf -> and_1055.in2
    edge e2284 : asSInt_1075.out -> MulFullRawFN.io_rawOut_sExp
    edge e2285 : or_1073.out -> MulFullRawFN.io_rawOut_isZero
    edge e2286 : or_1056.out -> or_1070.in2
    
}

