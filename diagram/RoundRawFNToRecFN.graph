// version: 1.1.1, chiselVersion: 3.4.3, for more information, visit https://github.com/easysoc/layered-firrtl
algorithm: layered
hierarchyHandling: INCLUDE_CHILDREN

node RoundRawFNToRecFN {
    portConstraints: FIXED_SIDE
    nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
    nodeSize.constraints: "PORTS PORT_LABELS NODE_LABELS"
    label "RoundRawFNToRecFN"
    
    port io_invalidExc {
        ^port.side: WEST
        label "io_invalidExc"
    }
    port io_in_isNaN {
        ^port.side: WEST
        label "io_in_isNaN"
    }
    port io_in_isInf {
        ^port.side: WEST
        label "io_in_isInf"
    }
    port io_in_isZero {
        ^port.side: WEST
        label "io_in_isZero"
    }
    port io_in_sign {
        ^port.side: WEST
        label "io_in_sign"
    }
    port io_in_sExp {
        ^port.side: WEST
        label "io_in_sExp"
    }
    port io_in_sig {
        ^port.side: WEST
        label "io_in_sig"
    }
    port io_roundingMode {
        ^port.side: WEST
        label "io_roundingMode"
    }
    port io_out {
        ^port.side: EAST
        label "io_out"
    }
    node submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN {
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        nodeSize.constraints: "PORTS PORT_LABELS NODE_LABELS"
        label "roundAnyRawFNToRecFN"
            
        port io_invalidExc {
            ^port.side: WEST
            label "io_invalidExc"
        }    
        port io_in_isNaN {
            ^port.side: WEST
            label "io_in_isNaN"
        }    
        port io_in_isInf {
            ^port.side: WEST
            label "io_in_isInf"
        }    
        port io_in_isZero {
            ^port.side: WEST
            label "io_in_isZero"
        }    
        port io_in_sign {
            ^port.side: WEST
            label "io_in_sign"
        }    
        port io_in_sExp {
            ^port.side: WEST
            label "io_in_sExp"
        }    
        port io_in_sig {
            ^port.side: WEST
            label "io_in_sig"
        }    
        port io_roundingMode {
            ^port.side: WEST
            label "io_roundingMode"
        }    
        port io_out {
            ^port.side: EAST
            label "io_out"
        }
    
    
    }

    edge e2083 : RoundRawFNToRecFN.io_in_isNaN -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_in_isNaN
    edge e2084 : RoundRawFNToRecFN.io_in_sig -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_in_sig
    edge e2085 : RoundRawFNToRecFN.io_roundingMode -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_roundingMode
    edge e2086 : RoundRawFNToRecFN.io_in_isZero -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_in_isZero
    edge e2087 : RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_out -> RoundRawFNToRecFN.io_out
    edge e2088 : RoundRawFNToRecFN.io_in_sign -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_in_sign
    edge e2089 : RoundRawFNToRecFN.io_in_isInf -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_in_isInf
    edge e2090 : RoundRawFNToRecFN.io_in_sExp -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_in_sExp
    edge e2091 : RoundRawFNToRecFN.io_invalidExc -> RoundRawFNToRecFN.submodule_roundAnyRawFNToRecFN_RoundAnyRawFNToRecFN.io_invalidExc
    
}

