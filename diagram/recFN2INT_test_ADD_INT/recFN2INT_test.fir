;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit recFN2INT : 
  module RecFNToIN : 
    output io : {flip in : UInt<33>, flip roundingMode : UInt<3>, flip signedOut : UInt<1>, out : UInt<32>, intExceptionFlags : UInt<3>}
    
    io is invalid
    node rawIn_exp = bits(io.in, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawIn : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _rawIn_out_isNaN_T_1 = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    rawIn.isNaN <= _rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _rawIn_out_isInf_T = bits(rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _rawIn_out_isInf_T_1 = eq(_rawIn_out_isInf_T, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _rawIn_out_isInf_T_2 = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    rawIn.isInf <= _rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    rawIn.isZero <= rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _rawIn_out_sign_T = bits(io.in, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawIn.sign <= _rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _rawIn_out_sExp_T = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    rawIn.sExp <= _rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node rawIn_out_sig_hi_lo = eq(rawIn_isZero, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node rawIn_out_sig_lo = bits(io.in, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h00"), rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node _rawIn_out_sig_T = cat(rawIn_out_sig_hi, rawIn_out_sig_lo) @[Cat.scala 30:58]
    rawIn.sig <= _rawIn_out_sig_T @[rawFloatFromRecFN.scala 60:20]
    node magGeOne = bits(rawIn.sExp, 8, 8) @[RecFNToIN.scala 58:30]
    node posExp = bits(rawIn.sExp, 7, 0) @[RecFNToIN.scala 59:28]
    node _magJustBelowOne_T = eq(magGeOne, UInt<1>("h00")) @[RecFNToIN.scala 60:27]
    node _magJustBelowOne_T_1 = andr(posExp) @[RecFNToIN.scala 60:47]
    node magJustBelowOne = and(_magJustBelowOne_T, _magJustBelowOne_T_1) @[RecFNToIN.scala 60:37]
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RecFNToIN.scala 64:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RecFNToIN.scala 65:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RecFNToIN.scala 66:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RecFNToIN.scala 67:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RecFNToIN.scala 68:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RecFNToIN.scala 69:53]
    node shiftedSig_lo = bits(rawIn.sig, 22, 0) @[RecFNToIN.scala 80:32]
    node _shiftedSig_T = cat(magGeOne, shiftedSig_lo) @[Cat.scala 30:58]
    node _shiftedSig_T_1 = bits(rawIn.sExp, 4, 0) @[RecFNToIN.scala 82:27]
    node _shiftedSig_T_2 = mux(magGeOne, _shiftedSig_T_1, UInt<1>("h00")) @[RecFNToIN.scala 81:16]
    node shiftedSig = dshl(_shiftedSig_T, _shiftedSig_T_2) @[RecFNToIN.scala 80:50]
    node alignedSig_hi = shr(shiftedSig, 22) @[RecFNToIN.scala 86:23]
    node _alignedSig_T = bits(shiftedSig, 21, 0) @[RecFNToIN.scala 86:51]
    node alignedSig_lo = orr(_alignedSig_T) @[RecFNToIN.scala 86:69]
    node alignedSig = cat(alignedSig_hi, alignedSig_lo) @[Cat.scala 30:58]
    node _unroundedInt_T = shr(alignedSig, 2) @[RecFNToIN.scala 87:54]
    node unroundedInt = or(UInt<32>("h00"), _unroundedInt_T) @[RecFNToIN.scala 87:42]
    node _common_inexact_T = bits(alignedSig, 1, 0) @[RecFNToIN.scala 89:50]
    node _common_inexact_T_1 = orr(_common_inexact_T) @[RecFNToIN.scala 89:57]
    node _common_inexact_T_2 = eq(rawIn.isZero, UInt<1>("h00")) @[RecFNToIN.scala 89:62]
    node common_inexact = mux(magGeOne, _common_inexact_T_1, _common_inexact_T_2) @[RecFNToIN.scala 89:29]
    node _roundIncr_near_even_T = bits(alignedSig, 2, 1) @[RecFNToIN.scala 91:39]
    node _roundIncr_near_even_T_1 = andr(_roundIncr_near_even_T) @[RecFNToIN.scala 91:46]
    node _roundIncr_near_even_T_2 = bits(alignedSig, 1, 0) @[RecFNToIN.scala 91:64]
    node _roundIncr_near_even_T_3 = andr(_roundIncr_near_even_T_2) @[RecFNToIN.scala 91:71]
    node _roundIncr_near_even_T_4 = or(_roundIncr_near_even_T_1, _roundIncr_near_even_T_3) @[RecFNToIN.scala 91:51]
    node _roundIncr_near_even_T_5 = and(magGeOne, _roundIncr_near_even_T_4) @[RecFNToIN.scala 91:25]
    node _roundIncr_near_even_T_6 = bits(alignedSig, 1, 0) @[RecFNToIN.scala 92:39]
    node _roundIncr_near_even_T_7 = orr(_roundIncr_near_even_T_6) @[RecFNToIN.scala 92:46]
    node _roundIncr_near_even_T_8 = and(magJustBelowOne, _roundIncr_near_even_T_7) @[RecFNToIN.scala 92:26]
    node roundIncr_near_even = or(_roundIncr_near_even_T_5, _roundIncr_near_even_T_8) @[RecFNToIN.scala 91:78]
    node _roundIncr_near_maxMag_T = bits(alignedSig, 1, 1) @[RecFNToIN.scala 93:56]
    node _roundIncr_near_maxMag_T_1 = and(magGeOne, _roundIncr_near_maxMag_T) @[RecFNToIN.scala 93:43]
    node roundIncr_near_maxMag = or(_roundIncr_near_maxMag_T_1, magJustBelowOne) @[RecFNToIN.scala 93:61]
    node _roundIncr_T = and(roundingMode_near_even, roundIncr_near_even) @[RecFNToIN.scala 95:35]
    node _roundIncr_T_1 = and(roundingMode_near_maxMag, roundIncr_near_maxMag) @[RecFNToIN.scala 96:35]
    node _roundIncr_T_2 = or(_roundIncr_T, _roundIncr_T_1) @[RecFNToIN.scala 95:61]
    node _roundIncr_T_3 = or(roundingMode_min, roundingMode_odd) @[RecFNToIN.scala 97:28]
    node _roundIncr_T_4 = and(rawIn.sign, common_inexact) @[RecFNToIN.scala 98:26]
    node _roundIncr_T_5 = and(_roundIncr_T_3, _roundIncr_T_4) @[RecFNToIN.scala 97:49]
    node _roundIncr_T_6 = or(_roundIncr_T_2, _roundIncr_T_5) @[RecFNToIN.scala 96:61]
    node _roundIncr_T_7 = eq(rawIn.sign, UInt<1>("h00")) @[RecFNToIN.scala 99:31]
    node _roundIncr_T_8 = and(_roundIncr_T_7, common_inexact) @[RecFNToIN.scala 99:43]
    node _roundIncr_T_9 = and(roundingMode_max, _roundIncr_T_8) @[RecFNToIN.scala 99:27]
    node roundIncr = or(_roundIncr_T_6, _roundIncr_T_9) @[RecFNToIN.scala 98:46]
    node _complUnroundedInt_T = not(unroundedInt) @[RecFNToIN.scala 100:45]
    node complUnroundedInt = mux(rawIn.sign, _complUnroundedInt_T, unroundedInt) @[RecFNToIN.scala 100:32]
    node _roundedInt_T = xor(roundIncr, rawIn.sign) @[RecFNToIN.scala 102:23]
    node _roundedInt_T_1 = add(complUnroundedInt, UInt<1>("h01")) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_2 = tail(_roundedInt_T_1, 1) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_3 = mux(_roundedInt_T, _roundedInt_T_2, complUnroundedInt) @[RecFNToIN.scala 102:12]
    node _roundedInt_T_4 = and(roundingMode_odd, common_inexact) @[RecFNToIN.scala 105:31]
    node roundedInt = or(_roundedInt_T_3, _roundedInt_T_4) @[RecFNToIN.scala 105:11]
    node magGeOne_atOverflowEdge = eq(posExp, UInt<5>("h01f")) @[RecFNToIN.scala 107:43]
    node _roundCarryBut2_T = bits(unroundedInt, 29, 0) @[RecFNToIN.scala 110:38]
    node _roundCarryBut2_T_1 = andr(_roundCarryBut2_T) @[RecFNToIN.scala 110:56]
    node roundCarryBut2 = and(_roundCarryBut2_T_1, roundIncr) @[RecFNToIN.scala 110:61]
    node _common_overflow_T = geq(posExp, UInt<6>("h020")) @[RecFNToIN.scala 113:21]
    node _common_overflow_T_1 = bits(unroundedInt, 30, 0) @[RecFNToIN.scala 117:42]
    node _common_overflow_T_2 = orr(_common_overflow_T_1) @[RecFNToIN.scala 117:60]
    node _common_overflow_T_3 = or(_common_overflow_T_2, roundIncr) @[RecFNToIN.scala 117:64]
    node _common_overflow_T_4 = and(magGeOne_atOverflowEdge, _common_overflow_T_3) @[RecFNToIN.scala 116:49]
    node _common_overflow_T_5 = eq(posExp, UInt<5>("h01e")) @[RecFNToIN.scala 119:38]
    node _common_overflow_T_6 = and(_common_overflow_T_5, roundCarryBut2) @[RecFNToIN.scala 119:62]
    node _common_overflow_T_7 = or(magGeOne_atOverflowEdge, _common_overflow_T_6) @[RecFNToIN.scala 118:49]
    node _common_overflow_T_8 = mux(rawIn.sign, _common_overflow_T_4, _common_overflow_T_7) @[RecFNToIN.scala 115:24]
    node _common_overflow_T_9 = bits(unroundedInt, 30, 30) @[RecFNToIN.scala 123:42]
    node _common_overflow_T_10 = and(magGeOne_atOverflowEdge, _common_overflow_T_9) @[RecFNToIN.scala 122:50]
    node _common_overflow_T_11 = and(_common_overflow_T_10, roundCarryBut2) @[RecFNToIN.scala 123:57]
    node _common_overflow_T_12 = or(rawIn.sign, _common_overflow_T_11) @[RecFNToIN.scala 121:32]
    node _common_overflow_T_13 = mux(io.signedOut, _common_overflow_T_8, _common_overflow_T_12) @[RecFNToIN.scala 114:20]
    node _common_overflow_T_14 = or(_common_overflow_T, _common_overflow_T_13) @[RecFNToIN.scala 113:40]
    node _common_overflow_T_15 = eq(io.signedOut, UInt<1>("h00")) @[RecFNToIN.scala 125:13]
    node _common_overflow_T_16 = and(_common_overflow_T_15, rawIn.sign) @[RecFNToIN.scala 125:27]
    node _common_overflow_T_17 = and(_common_overflow_T_16, roundIncr) @[RecFNToIN.scala 125:41]
    node common_overflow = mux(magGeOne, _common_overflow_T_14, _common_overflow_T_17) @[RecFNToIN.scala 112:12]
    node invalidExc = or(rawIn.isNaN, rawIn.isInf) @[RecFNToIN.scala 130:34]
    node _overflow_T = eq(invalidExc, UInt<1>("h00")) @[RecFNToIN.scala 131:20]
    node overflow = and(_overflow_T, common_overflow) @[RecFNToIN.scala 131:32]
    node _inexact_T = eq(invalidExc, UInt<1>("h00")) @[RecFNToIN.scala 132:20]
    node _inexact_T_1 = eq(common_overflow, UInt<1>("h00")) @[RecFNToIN.scala 132:35]
    node _inexact_T_2 = and(_inexact_T, _inexact_T_1) @[RecFNToIN.scala 132:32]
    node inexact = and(_inexact_T_2, common_inexact) @[RecFNToIN.scala 132:52]
    node _excSign_T = eq(rawIn.isNaN, UInt<1>("h00")) @[RecFNToIN.scala 134:19]
    node excSign = and(_excSign_T, rawIn.sign) @[RecFNToIN.scala 134:32]
    node _excOut_T = eq(io.signedOut, excSign) @[RecFNToIN.scala 136:27]
    node _excOut_T_1 = mux(_excOut_T, UInt<32>("h080000000"), UInt<1>("h00")) @[RecFNToIN.scala 136:12]
    node _excOut_T_2 = eq(excSign, UInt<1>("h00")) @[RecFNToIN.scala 140:13]
    node _excOut_T_3 = mux(_excOut_T_2, UInt<31>("h07fffffff"), UInt<1>("h00")) @[RecFNToIN.scala 140:12]
    node excOut = or(_excOut_T_1, _excOut_T_3) @[RecFNToIN.scala 139:11]
    node _io_out_T = or(invalidExc, common_overflow) @[RecFNToIN.scala 142:30]
    node _io_out_T_1 = mux(_io_out_T, excOut, roundedInt) @[RecFNToIN.scala 142:18]
    io.out <= _io_out_T_1 @[RecFNToIN.scala 142:12]
    node io_intExceptionFlags_hi = cat(invalidExc, overflow) @[Cat.scala 30:58]
    node _io_intExceptionFlags_T = cat(io_intExceptionFlags_hi, inexact) @[Cat.scala 30:58]
    io.intExceptionFlags <= _io_intExceptionFlags_T @[RecFNToIN.scala 143:26]
    
  module recFN2INT : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip signed : UInt<1>, flip round : UInt<3>, flip in : UInt<32>, out : UInt<33>}
    
    reg in_FN : UInt, clock @[recFN2INT.scala 23:24]
    in_FN <= io.in @[recFN2INT.scala 23:24]
    wire round_mode : UInt
    round_mode <= io.round
    inst recFNToIN of RecFNToIN @[recFN2INT.scala 26:27]
    node recFNToIN_io_in_rawIn_sign = bits(in_FN, 31, 31) @[rawFloatFromFN.scala 46:22]
    node recFNToIN_io_in_rawIn_expIn = bits(in_FN, 30, 23) @[rawFloatFromFN.scala 47:23]
    node recFNToIN_io_in_rawIn_fractIn = bits(in_FN, 22, 0) @[rawFloatFromFN.scala 48:25]
    node recFNToIN_io_in_rawIn_isZeroExpIn = eq(recFNToIN_io_in_rawIn_expIn, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node recFNToIN_io_in_rawIn_isZeroFractIn = eq(recFNToIN_io_in_rawIn_fractIn, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _recFNToIN_io_in_rawIn_normDist_T = bits(recFNToIN_io_in_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_1 = bits(recFNToIN_io_in_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_2 = bits(recFNToIN_io_in_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_3 = bits(recFNToIN_io_in_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_4 = bits(recFNToIN_io_in_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_5 = bits(recFNToIN_io_in_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_6 = bits(recFNToIN_io_in_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_7 = bits(recFNToIN_io_in_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_8 = bits(recFNToIN_io_in_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_9 = bits(recFNToIN_io_in_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_10 = bits(recFNToIN_io_in_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_11 = bits(recFNToIN_io_in_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_12 = bits(recFNToIN_io_in_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_13 = bits(recFNToIN_io_in_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_14 = bits(recFNToIN_io_in_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_15 = bits(recFNToIN_io_in_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_16 = bits(recFNToIN_io_in_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_17 = bits(recFNToIN_io_in_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_18 = bits(recFNToIN_io_in_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_19 = bits(recFNToIN_io_in_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_20 = bits(recFNToIN_io_in_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_21 = bits(recFNToIN_io_in_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_22 = bits(recFNToIN_io_in_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
    node _recFNToIN_io_in_rawIn_normDist_T_23 = mux(_recFNToIN_io_in_rawIn_normDist_T_1, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_24 = mux(_recFNToIN_io_in_rawIn_normDist_T_2, UInt<5>("h014"), _recFNToIN_io_in_rawIn_normDist_T_23) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_25 = mux(_recFNToIN_io_in_rawIn_normDist_T_3, UInt<5>("h013"), _recFNToIN_io_in_rawIn_normDist_T_24) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_26 = mux(_recFNToIN_io_in_rawIn_normDist_T_4, UInt<5>("h012"), _recFNToIN_io_in_rawIn_normDist_T_25) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_27 = mux(_recFNToIN_io_in_rawIn_normDist_T_5, UInt<5>("h011"), _recFNToIN_io_in_rawIn_normDist_T_26) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_28 = mux(_recFNToIN_io_in_rawIn_normDist_T_6, UInt<5>("h010"), _recFNToIN_io_in_rawIn_normDist_T_27) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_29 = mux(_recFNToIN_io_in_rawIn_normDist_T_7, UInt<4>("h0f"), _recFNToIN_io_in_rawIn_normDist_T_28) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_30 = mux(_recFNToIN_io_in_rawIn_normDist_T_8, UInt<4>("h0e"), _recFNToIN_io_in_rawIn_normDist_T_29) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_31 = mux(_recFNToIN_io_in_rawIn_normDist_T_9, UInt<4>("h0d"), _recFNToIN_io_in_rawIn_normDist_T_30) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_32 = mux(_recFNToIN_io_in_rawIn_normDist_T_10, UInt<4>("h0c"), _recFNToIN_io_in_rawIn_normDist_T_31) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_33 = mux(_recFNToIN_io_in_rawIn_normDist_T_11, UInt<4>("h0b"), _recFNToIN_io_in_rawIn_normDist_T_32) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_34 = mux(_recFNToIN_io_in_rawIn_normDist_T_12, UInt<4>("h0a"), _recFNToIN_io_in_rawIn_normDist_T_33) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_35 = mux(_recFNToIN_io_in_rawIn_normDist_T_13, UInt<4>("h09"), _recFNToIN_io_in_rawIn_normDist_T_34) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_36 = mux(_recFNToIN_io_in_rawIn_normDist_T_14, UInt<4>("h08"), _recFNToIN_io_in_rawIn_normDist_T_35) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_37 = mux(_recFNToIN_io_in_rawIn_normDist_T_15, UInt<3>("h07"), _recFNToIN_io_in_rawIn_normDist_T_36) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_38 = mux(_recFNToIN_io_in_rawIn_normDist_T_16, UInt<3>("h06"), _recFNToIN_io_in_rawIn_normDist_T_37) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_39 = mux(_recFNToIN_io_in_rawIn_normDist_T_17, UInt<3>("h05"), _recFNToIN_io_in_rawIn_normDist_T_38) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_40 = mux(_recFNToIN_io_in_rawIn_normDist_T_18, UInt<3>("h04"), _recFNToIN_io_in_rawIn_normDist_T_39) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_41 = mux(_recFNToIN_io_in_rawIn_normDist_T_19, UInt<2>("h03"), _recFNToIN_io_in_rawIn_normDist_T_40) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_42 = mux(_recFNToIN_io_in_rawIn_normDist_T_20, UInt<2>("h02"), _recFNToIN_io_in_rawIn_normDist_T_41) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_normDist_T_43 = mux(_recFNToIN_io_in_rawIn_normDist_T_21, UInt<1>("h01"), _recFNToIN_io_in_rawIn_normDist_T_42) @[Mux.scala 47:69]
    node recFNToIN_io_in_rawIn_normDist = mux(_recFNToIN_io_in_rawIn_normDist_T_22, UInt<1>("h00"), _recFNToIN_io_in_rawIn_normDist_T_43) @[Mux.scala 47:69]
    node _recFNToIN_io_in_rawIn_subnormFract_T = dshl(recFNToIN_io_in_rawIn_fractIn, recFNToIN_io_in_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _recFNToIN_io_in_rawIn_subnormFract_T_1 = bits(_recFNToIN_io_in_rawIn_subnormFract_T, 21, 0) @[rawFloatFromFN.scala 54:47]
    node recFNToIN_io_in_rawIn_subnormFract = shl(_recFNToIN_io_in_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _recFNToIN_io_in_rawIn_adjustedExp_T = xor(recFNToIN_io_in_rawIn_normDist, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _recFNToIN_io_in_rawIn_adjustedExp_T_1 = mux(recFNToIN_io_in_rawIn_isZeroExpIn, _recFNToIN_io_in_rawIn_adjustedExp_T, recFNToIN_io_in_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _recFNToIN_io_in_rawIn_adjustedExp_T_2 = mux(recFNToIN_io_in_rawIn_isZeroExpIn, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _recFNToIN_io_in_rawIn_adjustedExp_T_3 = or(UInt<8>("h080"), _recFNToIN_io_in_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _recFNToIN_io_in_rawIn_adjustedExp_T_4 = add(_recFNToIN_io_in_rawIn_adjustedExp_T_1, _recFNToIN_io_in_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node recFNToIN_io_in_rawIn_adjustedExp = tail(_recFNToIN_io_in_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node recFNToIN_io_in_rawIn_isZero = and(recFNToIN_io_in_rawIn_isZeroExpIn, recFNToIN_io_in_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _recFNToIN_io_in_rawIn_isSpecial_T = bits(recFNToIN_io_in_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 63:37]
    node recFNToIN_io_in_rawIn_isSpecial = eq(_recFNToIN_io_in_rawIn_isSpecial_T, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire recFNToIN_io_in_rawIn : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    recFNToIN_io_in_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _recFNToIN_io_in_rawIn_out_isNaN_T = eq(recFNToIN_io_in_rawIn_isZeroFractIn, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _recFNToIN_io_in_rawIn_out_isNaN_T_1 = and(recFNToIN_io_in_rawIn_isSpecial, _recFNToIN_io_in_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    recFNToIN_io_in_rawIn.isNaN <= _recFNToIN_io_in_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _recFNToIN_io_in_rawIn_out_isInf_T = and(recFNToIN_io_in_rawIn_isSpecial, recFNToIN_io_in_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    recFNToIN_io_in_rawIn.isInf <= _recFNToIN_io_in_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    recFNToIN_io_in_rawIn.isZero <= recFNToIN_io_in_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    recFNToIN_io_in_rawIn.sign <= recFNToIN_io_in_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _recFNToIN_io_in_rawIn_out_sExp_T = bits(recFNToIN_io_in_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _recFNToIN_io_in_rawIn_out_sExp_T_1 = cvt(_recFNToIN_io_in_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    recFNToIN_io_in_rawIn.sExp <= _recFNToIN_io_in_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node recFNToIN_io_in_rawIn_out_sig_hi_lo = eq(recFNToIN_io_in_rawIn_isZero, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node recFNToIN_io_in_rawIn_out_sig_lo = mux(recFNToIN_io_in_rawIn_isZeroExpIn, recFNToIN_io_in_rawIn_subnormFract, recFNToIN_io_in_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node recFNToIN_io_in_rawIn_out_sig_hi = cat(UInt<1>("h00"), recFNToIN_io_in_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node _recFNToIN_io_in_rawIn_out_sig_T = cat(recFNToIN_io_in_rawIn_out_sig_hi, recFNToIN_io_in_rawIn_out_sig_lo) @[Cat.scala 30:58]
    recFNToIN_io_in_rawIn.sig <= _recFNToIN_io_in_rawIn_out_sig_T @[rawFloatFromFN.scala 71:17]
    node _recFNToIN_io_in_T = bits(recFNToIN_io_in_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _recFNToIN_io_in_T_1 = mux(recFNToIN_io_in_rawIn.isZero, UInt<3>("h00"), _recFNToIN_io_in_T) @[recFNFromFN.scala 48:16]
    node _recFNToIN_io_in_T_2 = mux(recFNToIN_io_in_rawIn.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node recFNToIN_io_in_hi_lo = or(_recFNToIN_io_in_T_1, _recFNToIN_io_in_T_2) @[recFNFromFN.scala 48:79]
    node recFNToIN_io_in_lo_hi = bits(recFNToIN_io_in_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node recFNToIN_io_in_lo_lo = bits(recFNToIN_io_in_rawIn.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node recFNToIN_io_in_lo = cat(recFNToIN_io_in_lo_hi, recFNToIN_io_in_lo_lo) @[Cat.scala 30:58]
    node recFNToIN_io_in_hi = cat(recFNToIN_io_in_rawIn.sign, recFNToIN_io_in_hi_lo) @[Cat.scala 30:58]
    node _recFNToIN_io_in_T_3 = cat(recFNToIN_io_in_hi, recFNToIN_io_in_lo) @[Cat.scala 30:58]
    recFNToIN.io.in <= _recFNToIN_io_in_T_3 @[recFN2INT.scala 27:31]
    recFNToIN.io.roundingMode <= UInt<3>("h04") @[recFN2INT.scala 28:31]
    recFNToIN.io.signedOut <= io.signed @[recFN2INT.scala 29:31]
    reg recFNToIN_out : UInt, clock @[recFN2INT.scala 31:32]
    recFNToIN_out <= recFNToIN.io.out @[recFN2INT.scala 31:32]
    io.out <= recFNToIN_out @[recFN2INT.scala 33:12]
    
